Search.setIndex({"docnames": ["about", "analysis", "citation", "cluster", "codedocs/streamline", "codedocs/streamline.dataprep", "codedocs/streamline.dataprep.data_process", "codedocs/streamline.dataprep.exploratory_analysis", "codedocs/streamline.dataprep.kfold_partitioning", "codedocs/streamline.featurefns", "codedocs/streamline.featurefns.importance", "codedocs/streamline.featurefns.selection", "codedocs/streamline.modeling", "codedocs/streamline.modeling.basemodel", "codedocs/streamline.modeling.load_models", "codedocs/streamline.modeling.modeljob", "codedocs/streamline.modeling.parameters", "codedocs/streamline.modeling.utils", "codedocs/streamline.models", "codedocs/streamline.models.artificial_neural_network", "codedocs/streamline.models.decision_tree", "codedocs/streamline.models.elastic_net", "codedocs/streamline.models.genetic_programming", "codedocs/streamline.models.gradient_boosting", "codedocs/streamline.models.learning_based", "codedocs/streamline.models.linear_model", "codedocs/streamline.models.naive_bayes", "codedocs/streamline.models.neighbouring", "codedocs/streamline.models.random_forest", "codedocs/streamline.models.support_vector_machine", "codedocs/streamline.postanalysis", "codedocs/streamline.postanalysis.dataset_compare", "codedocs/streamline.postanalysis.gererate_report", "codedocs/streamline.postanalysis.model_replicate", "codedocs/streamline.postanalysis.statistics", "codedocs/streamline.runners", "codedocs/streamline.runners.clean_runner", "codedocs/streamline.runners.compare_runner", "codedocs/streamline.runners.dataprocess_runner", "codedocs/streamline.runners.eda_runner", "codedocs/streamline.runners.feature_runner", "codedocs/streamline.runners.model_runner", "codedocs/streamline.runners.replicate_runner", "codedocs/streamline.runners.report_runner", "codedocs/streamline.runners.stats_runner", "codedocs/streamline.utils", "codedocs/streamline.utils.checker", "codedocs/streamline.utils.cleanup", "codedocs/streamline.utils.cluster", "codedocs/streamline.utils.dataset", "codedocs/streamline.utils.evaluation", "codedocs/streamline.utils.job", "codedocs/streamline.utils.parser", "codedocs/streamline.utils.runners", "colab", "development", "index", "install", "local", "models", "modules", "parameters", "phases", "sample", "tips"], "filenames": ["about.md", "analysis.md", "citation.md", "cluster.md", "codedocs/streamline.rst", "codedocs/streamline.dataprep.rst", "codedocs/streamline.dataprep.data_process.rst", "codedocs/streamline.dataprep.exploratory_analysis.rst", "codedocs/streamline.dataprep.kfold_partitioning.rst", "codedocs/streamline.featurefns.rst", "codedocs/streamline.featurefns.importance.rst", "codedocs/streamline.featurefns.selection.rst", "codedocs/streamline.modeling.rst", "codedocs/streamline.modeling.basemodel.rst", "codedocs/streamline.modeling.load_models.rst", "codedocs/streamline.modeling.modeljob.rst", "codedocs/streamline.modeling.parameters.rst", "codedocs/streamline.modeling.utils.rst", "codedocs/streamline.models.rst", "codedocs/streamline.models.artificial_neural_network.rst", "codedocs/streamline.models.decision_tree.rst", "codedocs/streamline.models.elastic_net.rst", "codedocs/streamline.models.genetic_programming.rst", "codedocs/streamline.models.gradient_boosting.rst", "codedocs/streamline.models.learning_based.rst", "codedocs/streamline.models.linear_model.rst", "codedocs/streamline.models.naive_bayes.rst", "codedocs/streamline.models.neighbouring.rst", "codedocs/streamline.models.random_forest.rst", "codedocs/streamline.models.support_vector_machine.rst", "codedocs/streamline.postanalysis.rst", "codedocs/streamline.postanalysis.dataset_compare.rst", "codedocs/streamline.postanalysis.gererate_report.rst", "codedocs/streamline.postanalysis.model_replicate.rst", "codedocs/streamline.postanalysis.statistics.rst", "codedocs/streamline.runners.rst", "codedocs/streamline.runners.clean_runner.rst", "codedocs/streamline.runners.compare_runner.rst", "codedocs/streamline.runners.dataprocess_runner.rst", "codedocs/streamline.runners.eda_runner.rst", "codedocs/streamline.runners.feature_runner.rst", "codedocs/streamline.runners.model_runner.rst", "codedocs/streamline.runners.replicate_runner.rst", "codedocs/streamline.runners.report_runner.rst", "codedocs/streamline.runners.stats_runner.rst", "codedocs/streamline.utils.rst", "codedocs/streamline.utils.checker.rst", "codedocs/streamline.utils.cleanup.rst", "codedocs/streamline.utils.cluster.rst", "codedocs/streamline.utils.dataset.rst", "codedocs/streamline.utils.evaluation.rst", "codedocs/streamline.utils.job.rst", "codedocs/streamline.utils.parser.rst", "codedocs/streamline.utils.runners.rst", "colab.md", "development.md", "index.rst", "install.md", "local.md", "models.md", "modules.rst", "parameters.md", "phases.md", "sample.md", "tips.md"], "titles": ["About (FAQs)", "Explaining STREAMLINE Output", "Citations", "Running on HPC Clusters", "streamline package", "streamline.dataprep package", "streamline.dataprep.data_process module", "streamline.dataprep.exploratory_analysis module", "streamline.dataprep.kfold_partitioning module", "streamline.featurefns package", "streamline.featurefns.importance module", "streamline.featurefns.selection module", "streamline.modeling package", "streamline.modeling.basemodel module", "streamline.modeling.load_models module", "streamline.modeling.modeljob module", "streamline.modeling.parameters module", "streamline.modeling.utils module", "streamline.models package", "streamline.models.artificial_neural_network module", "streamline.models.decision_tree module", "streamline.models.elastic_net module", "streamline.models.genetic_programming module", "streamline.models.gradient_boosting module", "streamline.models.learning_based module", "streamline.models.linear_model module", "streamline.models.naive_bayes module", "streamline.models.neighbouring module", "streamline.models.random_forest module", "streamline.models.support_vector_machine module", "streamline.postanalysis package", "streamline.postanalysis.dataset_compare module", "streamline.postanalysis.gererate_report module", "streamline.postanalysis.model_replicate module", "streamline.postanalysis.statistics module", "streamline.runners package", "streamline.runners.clean_runner module", "streamline.runners.compare_runner module", "streamline.runners.dataprocess_runner module", "streamline.runners.eda_runner module", "streamline.runners.feature_runner module", "streamline.runners.model_runner module", "streamline.runners.replicate_runner module", "streamline.runners.report_runner module", "streamline.runners.stats_runner module", "streamline.utils package", "streamline.utils.checker module", "streamline.utils.cleanup module", "streamline.utils.cluster module", "streamline.utils.dataset module", "streamline.utils.evaluation module", "streamline.utils.job module", "streamline.utils.parser module", "streamline.utils.runners module", "Running on Google Colab", "Development notes", "STREAMLINE", "Installation", "Running on Local System", "Adding New Modeling Algorithms", "Code Documentation", "STREAMLINE Run Parameters", "STREAMLINE Phases Described", "Sample Outputs", "Guidelines for Setting Parameters"], "terms": {"offer": [0, 2, 34, 64], "varieti": 0, "option": [0, 6, 7, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 41, 42, 44, 47, 54, 55, 61, 62, 64], "make": [0, 3, 7, 55, 56, 57, 58, 59, 62], "access": 0, "those": [0, 11, 39, 54, 64], "littl": [0, 54, 55], "code": [0, 54, 55, 56, 58, 59, 62, 63], "experi": [0, 1, 7, 8, 11, 37, 39, 40, 41, 42, 43, 44, 47, 54, 58, 61, 64], "well": [0, 1, 2, 7, 10, 34, 39, 49, 56, 63, 64], "season": 0, "programm": 0, "data": [0, 1, 2, 3, 4, 6, 7, 8, 11, 13, 31, 34, 38, 39, 41, 42, 49, 54, 55, 56, 58, 61, 62, 64], "scientist": 0, "while": [0, 2, 7, 39, 55, 57, 63, 64], "current": [0, 2, 3, 7, 11, 40, 54, 55, 56], "graphic": 0, "user": [0, 1, 3, 7, 39, 49, 54, 55, 58, 61, 62, 63], "interfac": 0, "gui": [0, 58], "most": [0, 3, 54, 55, 57, 58, 59, 61, 62, 64], "naiv": [0, 26, 54, 64], "need": [0, 1, 3, 7, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 54, 57, 58, 62], "onli": [0, 1, 3, 7, 11, 33, 34, 39, 40, 44, 49, 54, 55, 56, 58, 61, 62, 63, 64], "know": [0, 55], "navig": 0, "pc": [0, 54, 58], "file": [0, 1, 7, 8, 10, 11, 15, 34, 39, 47, 49, 54, 55, 57, 59, 61, 62, 63], "system": [0, 3, 54, 57, 64], "specifi": [0, 1, 3, 7, 39, 41, 49, 54, 55, 58, 61], "folder": [0, 1, 3, 7, 8, 31, 34, 39, 40, 47, 54, 57, 58, 59, 61, 62], "path": [0, 3, 7, 8, 10, 11, 14, 37, 39, 40, 41, 42, 43, 44, 47, 49, 54, 58, 61], "un": 0, "zip": [0, 54], "have": [0, 1, 2, 3, 11, 34, 39, 42, 43, 49, 54, 55, 57, 58, 61, 63, 64], "set": [0, 2, 3, 6, 7, 8, 11, 31, 34, 39, 41, 44, 49, 54, 55, 56, 57, 58, 61, 62], "up": [0, 3, 54, 55, 57, 58, 59, 61, 62, 64], "googl": [0, 55, 63], "drive": [0, 54, 57, 63], "account": [0, 54, 57], "veri": [0, 2, 3, 57, 64], "basic": [0, 7, 49, 56, 62], "knowledg": 0, "python": [0, 3, 54, 55, 57, 58], "environ": [0, 3, 54, 58], "appli": [0, 1, 2, 6, 7, 10, 11, 31, 33, 34, 39, 40, 42, 54, 55, 56, 61, 62, 63, 64], "colab": [0, 57, 58, 63], "within": [0, 1, 32, 39, 54, 55, 58, 60, 62], "jupyt": [0, 39, 54, 63], "notebook": [0, 39, 54, 61, 63], "bit": [0, 2], "more": [0, 1, 11, 33, 34, 39, 42, 54, 55, 56, 58, 62, 63, 64], "serial": [0, 39, 42], "command": [0, 13, 54, 55, 57, 61], "line": [0, 54, 57, 61], "parallel": [0, 3, 39, 42, 55, 58, 61, 62], "compat": [0, 2, 59], "linux": [0, 39], "cluster": [0, 4, 39, 42, 45, 54, 55, 58, 61], "A": [0, 1, 3, 54, 56, 58], "quickli": [0, 63], "rigor": [0, 56], "ml": [0, 1, 13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 37, 41, 43, 44, 54, 55, 56, 61, 62, 64], "analysi": [0, 1, 2, 3, 7, 31, 32, 33, 39, 42, 43, 54, 55, 56, 58, 61, 62, 64], "over": [0, 34, 40, 61], "one": [0, 1, 2, 3, 8, 11, 31, 33, 34, 42, 54, 55, 62, 63], "dataset": [0, 1, 3, 4, 6, 7, 8, 10, 11, 15, 31, 32, 33, 34, 37, 39, 40, 42, 43, 45, 46, 47, 61, 62, 63, 64], "known": 0, "develop": [0, 2, 56, 57, 60, 64], "model": [0, 1, 2, 3, 4, 6, 31, 33, 34, 37, 40, 41, 42, 43, 44, 49, 53, 54, 55, 56, 58, 60, 61, 62, 63], "algorithm": [0, 1, 2, 3, 7, 10, 11, 15, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 54, 56, 58, 61, 62, 64], "framework": [0, 39, 56], "compar": [0, 2, 3, 31, 34, 37, 42, 43, 44, 58, 61, 62], "establish": [0, 64], "scikit": [0, 2, 6, 39, 41, 54, 61, 62, 64], "learn": [0, 4, 6, 39, 41, 54, 55, 56, 61, 62, 63, 64], "each": [0, 1, 2, 7, 11, 31, 33, 34, 42, 44, 54, 60, 61, 62, 63], "new": [0, 1, 3, 6, 11, 33, 40, 41, 43, 54, 55, 58, 61, 62, 63], "baselin": [0, 64], "standard": [0, 6, 31, 34, 50, 64], "comparison": [0, 1, 2, 6, 31, 34, 62], "e": [0, 1, 2, 3, 6, 7, 11, 34, 39, 41, 54, 55, 56, 58, 61, 62, 63, 64], "posit": [0, 39, 50, 54], "control": [0, 2, 6, 49], "which": [0, 1, 2, 6, 31, 32, 34, 39, 42, 47, 54, 55, 58, 60, 61, 63], "evalu": [0, 1, 2, 4, 10, 13, 15, 31, 33, 34, 41, 42, 45, 55, 56, 61, 62, 63, 64], "seek": 0, "optim": [0, 12, 13, 41, 54, 55, 56, 61, 62, 64], "pipelin": [0, 1, 3, 4, 7, 10, 31, 32, 34, 39, 43, 47, 49, 54, 55, 56, 58, 59, 61, 62, 64], "assembli": 0, "part": [0, 33, 49, 54, 58, 61], "methodologi": 0, "an": [0, 1, 2, 7, 11, 34, 39, 41, 54, 55, 56, 59, 61, 62, 63, 64], "exploratori": [0, 1, 3, 7, 33, 39, 49, 54, 55, 58, 62], "featur": [0, 1, 3, 6, 7, 10, 11, 13, 15, 33, 34, 39, 40, 41, 42, 43, 44, 49, 54, 55, 56, 58, 61, 62, 63, 64], "import": [0, 1, 3, 4, 9, 11, 13, 33, 34, 40, 41, 44, 54, 55, 56, 58, 59, 61, 62, 64], "estim": [0, 33, 41, 55, 61, 62, 64], "select": [0, 1, 3, 4, 7, 9, 10, 34, 39, 40, 54, 55, 56, 58, 61, 62, 64], "prior": [0, 2, 40, 54, 61], "some": [0, 1, 11, 49, 54, 55, 61], "educ": [0, 2], "exampl": [0, 3, 54, 58, 59, 61, 63], "integr": [0, 2, 55], "mani": [0, 54, 56, 62], "amaz": 0, "base": [0, 1, 6, 7, 8, 10, 11, 13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 51, 54, 55, 57, 59, 61, 62], "scienc": 0, "avail": [0, 39, 41, 54, 55, 56, 57, 61, 63], "particular": 0, "panda": [0, 6], "scipi": [0, 57], "optuna": [0, 1, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41, 54, 55, 59, 61], "creat": [0, 1, 3, 10, 11, 34, 49, 54, 55, 57, 59, 63], "expand": [0, 54, 55, 56], "adapt": 0, "modifi": [0, 54], "test": [0, 1, 6, 7, 8, 11, 31, 34, 42, 43, 47, 54, 55, 57, 61, 62, 63, 64], "identifi": [0, 2, 7, 11, 34, 49, 54, 55, 56, 64], "less": [0, 7, 41, 61, 63], "obviou": 0, "bug": [0, 55], "don": [0, 54, 57], "t": [0, 34, 54, 57, 58], "prevent": [0, 55], "complet": [0, 31, 34, 41, 54, 55, 56, 57, 61, 63], "The": [0, 2, 3, 6, 7, 34, 39, 54, 55, 56, 57, 58, 59, 60, 62, 63], "autom": [0, 2, 4, 56, 62], "element": [0, 6, 10, 11], "clean": [0, 3, 7, 49, 58, 62], "cross": [0, 8, 10, 11, 39, 40, 41, 49, 54, 62, 63], "valid": [0, 8, 10, 11, 39, 40, 41, 49, 54, 62, 63], "cv": [0, 1, 3, 6, 8, 10, 11, 13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 38, 39, 40, 42, 44, 47, 53, 54, 55, 58, 59, 61, 62, 63], "partit": [0, 1, 3, 6, 8, 39, 40, 49, 54, 55, 61, 62], "scale": [0, 1, 6, 61, 62, 64], "imput": [0, 1, 6, 61, 62, 64], "filter": [0, 2, 11, 40, 61], "collect": [0, 11, 62], "hyperparamet": [0, 1, 15, 41, 54, 55, 61, 62, 64], "across": [0, 7, 11, 31, 34, 39, 62], "15": [0, 2, 41], "classif": [0, 4, 34, 39, 50, 54, 56], "metric": [0, 15, 31, 34, 39, 41, 42, 44, 50, 54, 61, 62], "automat": [0, 1, 7, 32, 54, 59, 63], "save": [0, 1, 3, 6, 7, 8, 10, 11, 15, 31, 34, 39, 47, 54, 62], "all": [0, 1, 2, 3, 6, 7, 10, 11, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 39, 41, 42, 43, 44, 47, 54, 55, 57, 58, 59, 61, 62, 63, 64], "result": [0, 1, 7, 11, 32, 34, 39, 42, 44, 54, 55, 56, 61, 62, 63, 64], "public": [0, 2], "readi": 0, "plot": [0, 7, 11, 13, 34, 37, 39, 41, 42, 44, 54, 59, 61, 62, 64], "propos": 0, "composit": [0, 34, 44, 61], "non": [0, 31, 34, 49, 61, 62], "parametr": [0, 31, 34, 62], "statist": [0, 1, 3, 4, 7, 30, 31, 44, 54, 55, 58, 61, 62], "analyz": [0, 1, 39, 54, 62], "gener": [0, 1, 3, 7, 11, 31, 32, 33, 34, 39, 41, 43, 54, 55, 58, 61, 62, 63, 64], "pdf": [0, 1, 32, 43, 62], "summari": [0, 1, 13, 32, 34, 42, 43, 44, 47, 54, 61, 62], "report": [0, 1, 3, 7, 11, 32, 54, 58, 61, 62], "follow": [0, 1, 2, 3, 6, 47, 54, 55, 56, 57, 58, 62, 63], "ar": [0, 1, 2, 3, 7, 11, 31, 34, 39, 54, 55, 57, 58, 59, 61, 62, 63, 64], "bay": [0, 26, 54, 64], "nb": [0, 3, 26, 58], "logist": [0, 25, 54, 61, 64], "regress": [0, 25, 54, 55, 61, 64], "lr": [0, 3, 25, 55, 58], "decis": [0, 20, 54, 64], "tree": [0, 20, 54, 64], "dt": [0, 3, 20, 58], "random": [0, 7, 8, 28, 39, 40, 61], "forest": [0, 28], "rf": [0, 28], "gradient": [0, 23], "boost": [0, 23], "gb": [0, 23, 39], "xgboost": 0, "xgb": [0, 23, 41, 61], "lgboost": 0, "lgb": [0, 23], "catboost": [0, 55], "cgb": [0, 23], "support": [0, 3, 29, 44, 54, 55, 61], "vector": [0, 29], "machin": [0, 2, 3, 4, 29, 55, 56, 57, 62, 63], "svm": [0, 29, 41, 61, 64], "artifici": [0, 19], "neural": [0, 19], "network": [0, 19], "ann": [0, 19, 41, 61, 64], "k": [0, 8, 27, 62], "nearest": [0, 27], "neighbor": [0, 27], "nn": 0, "genet": [0, 2, 22, 55, 64], "program": [0, 3, 22, 55, 57, 64], "gp": [0, 22, 55], "educt": 0, "classifi": [0, 64], "elc": [0, 2, 24, 31, 32, 33, 37, 41, 42, 43, 44, 55, 64], "x": [0, 3, 7, 31], "xc": [0, 24, 31, 32, 33, 37, 41, 42, 43, 44, 55, 64], "extend": [0, 39, 55], "supervis": [0, 2, 4, 56], "track": 0, "exstrac": [0, 2, 24, 55, 64], "relev": [0, 2, 39, 54, 64], "valu": [0, 6, 7, 34, 39, 41, 49, 50, 54, 55, 61, 62, 63, 64], "rang": [0, 16, 41, 59, 61], "carefulli": 0, "pre": [0, 2, 54, 55, 58, 62, 63], "driven": 0, "sweep": [0, 41, 55, 59, 61, 62], "format": [0, 1, 32, 39, 54, 62], "intend": [0, 55, 56], "give": [0, 1, 3, 34, 39, 54, 55, 61], "brief": 0, "kei": [0, 1, 3, 32, 55, 62], "contain": [0, 1, 39, 42, 43, 61], "analys": [0, 58, 62], "figur": [0, 1, 33, 34, 40, 44, 54, 61], "output": [0, 2, 7, 10, 15, 37, 39, 40, 41, 42, 43, 44, 46, 47, 54, 56, 57, 58, 61], "allow": [0, 3, 39, 54, 55, 57, 62], "examin": 0, "aspect": 0, "perform": [0, 2, 31, 34, 40, 55, 56, 61, 62, 63], "we": [0, 1, 2, 3, 11, 34, 49, 54, 55, 56, 57, 58, 59, 61, 63, 64], "also": [0, 1, 2, 3, 7, 31, 33, 39, 54, 56, 57, 58, 59, 61, 62, 63, 64], "design": [0, 1, 62], "oper": [0, 3, 7, 8, 49, 55, 64], "thi": [0, 1, 2, 3, 6, 7, 15, 31, 32, 33, 34, 39, 42, 47, 54, 55, 56, 57, 58, 59, 62, 63, 64], "quick": [0, 57], "do": [0, 3, 7, 39, 41, 54, 55, 58, 61, 62, 64], "even": [0, 3, 54, 55, 64], "1": [0, 2, 3, 7, 31, 34, 39, 41, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64], "predict": [0, 12, 13, 49, 50, 56, 63, 64], "probabl": [0, 55], "2": [0, 2, 3, 55, 56, 58, 62], "regener": 0, "custom": [0, 1, 54, 55, 58, 59], "tweak": 0, "3": [0, 3, 11, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 54, 56, 57, 58, 59, 62], "try": 0, "out": [0, 1, 2, 3, 32, 33, 40, 42, 43, 55, 57, 58, 61], "effect": [0, 10, 54, 56, 64], "threshold": 0, "interact": [0, 2, 10, 55, 56, 61, 64], "slider": 0, "4": [0, 3, 10, 32, 37, 38, 39, 40, 41, 42, 43, 44, 48, 56, 58, 62], "re": [0, 3, 50, 57, 61], "5": [0, 3, 34, 46, 54, 55, 58, 62, 64], "rank": [0, 11, 31, 34], "visual": [0, 2, 7, 34, 55], "reproduc": [0, 7, 8, 39, 40, 55, 56, 61], "when": [0, 1, 3, 32, 34, 39, 54, 55, 57, 61, 63, 64], "timeout": [0, 13, 15, 41, 54, 55, 61, 64], "paramet": [0, 1, 4, 6, 7, 8, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 37, 38, 39, 40, 41, 42, 43, 44, 49, 50, 54, 55, 56, 59, 62], "none": [0, 6, 7, 8, 10, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 49, 52, 54, 55, 59, 61, 63], "ensur": [0, 56, 58], "train": [0, 1, 2, 6, 8, 10, 11, 13, 15, 32, 33, 34, 41, 42, 43, 47, 54, 55, 61, 62, 63, 64], "same": [0, 1, 3, 6, 34, 39, 42, 43, 44, 49, 54, 57, 58, 59, 61, 62, 63], "whenev": 0, "seed": [0, 7, 8, 39, 40, 61], "vari": 0, "somewhat": 0, "particularli": [0, 64], "sinc": [0, 55, 63], "mai": [0, 1, 3, 7, 11, 39, 41, 54, 57, 58, 61, 63, 64], "number": [0, 2, 6, 7, 8, 11, 13, 34, 39, 40, 41, 44, 54, 55, 61, 62, 64], "trial": [0, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41, 55, 59, 61], "time": [0, 3, 13, 47, 54, 58, 62, 64], "limit": [0, 11, 54, 56, 64], "resourc": [0, 2, 54], "howev": [0, 3, 39, 54, 58, 64], "help": [0, 54, 57], "reason": [0, 54, 61, 62], "frame": [0, 8], "along": [0, 1, 55], "object": [0, 7, 8, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 51, 53, 59], "so": [0, 1, 3, 6, 7, 11, 34, 55, 58], "easili": [0, 3, 55, 56, 59, 63], "own": [0, 2, 59], "outsid": [0, 55], "NOT": [0, 54], "thei": [0, 2, 3, 34, 39, 54, 55, 57, 64], "still": [0, 54, 61], "best": [0, 2, 15, 31, 34, 56, 62], "human": [0, 2, 64], "expert": 0, "engin": 0, "construct": 0, "encod": [0, 39, 54], "g": [0, 1, 2, 3, 39, 54, 56, 58, 61, 64], "hot": [0, 54], "categor": [0, 6, 7, 39, 54, 55, 59, 61, 63], "numer": [0, 39, 54, 63, 64], "text": [0, 3, 7, 8, 39, 54, 57], "bia": [0, 2, 56], "anyth": 0, "beyond": [0, 62], "simpl": [0, 2, 4, 6, 7, 57, 64], "remov": [0, 6, 10, 15, 61, 62, 63], "instanc": [0, 7, 10, 15, 39, 42, 49, 54, 61, 62, 63, 64], "class": [0, 3, 6, 7, 8, 10, 11, 13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 49, 51, 54, 58, 59, 61, 63], "label": [0, 3, 6, 7, 8, 10, 11, 13, 15, 39, 42, 43, 49, 50, 54, 58, 61, 63], "where": [0, 39, 57, 61, 64], "miss": [0, 6, 7, 39, 49, 54, 55, 61, 62, 63, 64], "recommend": [0, 7, 41, 44, 54, 57, 58, 61, 64], "consid": [0, 3, 7, 11, 39, 54, 55, 61], "conduct": [0, 1, 6, 7, 33, 39, 62, 64], "item": 0, "unlik": 0, "wa": [0, 1, 2, 11, 34, 56, 62, 63], "them": [0, 3, 34, 55, 57, 60], "oppos": 0, "attempt": [0, 54], "configur": [0, 55], "itself": 0, "adopt": [0, 2], "fix": [0, 41, 55, 61], "seri": [0, 62], "purposefulli": 0, "step": [0, 3, 7, 54, 57, 58, 62], "phase": [0, 1, 3, 6, 7, 10, 11, 15, 31, 34, 39, 40, 42, 46, 47, 49, 54, 55, 58, 60, 61, 63], "practic": [0, 64], "It": [0, 3, 32, 33, 34, 49, 55, 58, 63], "domain": [0, 59], "generaliz": 0, "specif": [0, 2, 3, 6, 39, 50, 57, 58, 59, 61], "focu": [0, 3, 39, 54], "biomed": [0, 2, 56], "mine": [0, 2, 56], "challeng": 0, "util": [0, 2, 4, 7, 8, 12, 60, 64], "wai": [0, 1, 3, 31, 34, 54, 56, 57, 58, 63], "suit": [0, 54], "problem": [0, 2, 56, 57, 64], "complex": [0, 2, 56, 57, 64], "multi": [0, 61], "ha": [0, 2, 3, 34, 54, 55, 58, 62], "been": [0, 1, 49, 55, 58, 64], "four": [0, 3], "colaboratori": [0, 54], "almost": [0, 55], "anyon": [0, 56], "advantag": 0, "No": [0, 39], "directli": [0, 2], "cloud": [0, 39, 54, 55], "One": [0, 2, 39], "click": [0, 54, 58], "whole": [0, 32, 55, 58], "disadvantag": 0, "slowest": [0, 62], "note": [0, 1, 34, 39, 41, 54, 58, 61, 62, 63, 64], "free": [0, 1, 54], "easi": [0, 1, 63], "customiz": [0, 56], "nearli": 0, "minim": [0, 41, 61], "view": [0, 1, 63], "document": [0, 55, 58, 59], "slower": 0, "runtim": [0, 1, 3, 6, 7, 10, 11, 15, 31, 32, 34, 54, 58, 62], "than": [0, 1, 7, 11, 31, 34, 54, 55, 62, 63, 64], "anaconda3": [0, 57], "python3": 0, "sever": [0, 3, 57, 58], "minor": 0, "packag": [0, 2, 54, 57, 60, 62], "instal": [0, 54, 58, 63], "local": [0, 3, 39, 42, 54], "typic": [0, 54, 62, 64], "faster": 0, "easier": [0, 56], "versatil": 0, "On": 0, "hpc": [0, 54, 55, 57], "slurm": [0, 48, 61], "By": 0, "far": [0, 3, 64], "fastest": [0, 54, 64], "effici": [0, 58], "abil": [0, 2, 55, 64], "7": [0, 1, 3, 55, 58, 62], "type": [0, 3, 7, 54, 55, 57, 58, 59], "occur": 0, "individu": [0, 1, 3, 7, 8, 31, 34, 42, 44, 47, 54, 58, 61, 62, 63, 64], "must": [0, 3, 7, 8, 39, 42, 43, 54, 58, 61], "sequenc": [0, 54], "were": [0, 1, 34], "dask": [0, 3], "jobqueu": [0, 3], "describ": [0, 1, 2, 3, 39, 54, 58, 59, 61], "done": [0, 3, 58], "overview": 0, "reliabl": 0, "default": [0, 7, 8, 11, 16, 37, 39, 40, 41, 42, 43, 44, 47, 54, 55, 61, 62], "adjust": 0, "further": [0, 1, 55, 60], "between": [0, 1, 2, 3, 7, 11, 31, 34, 54], "multipl": [0, 3, 39, 54, 56, 57], "target": [0, 6, 7, 10, 15, 31, 34, 39, 42, 43, 62, 63], "subset": [0, 40, 61, 64], "characterist": 0, "dimens": 0, "stat": [0, 3, 34, 58, 61], "count": [0, 7, 11], "balanc": [0, 34, 50, 59], "detect": [0, 10, 55, 56, 61], "v": [0, 7, 11, 39, 54, 61], "quanti": 0, "correl": [0, 7, 39, 42, 61, 62], "heatmap": [0, 7, 42, 61, 62], "univari": [0, 2, 7, 10, 32, 39, 61], "chi": [0, 7], "squar": [0, 7], "mann": [0, 7, 31, 34], "whitnei": [0, 7, 31, 34], "u": [0, 31, 34], "quantit": [0, 6, 7, 39, 54, 55, 61], "preprocess": [0, 6, 54, 56, 61, 62], "manual": [0, 3, 54, 58], "treat": [0, 39, 54, 55, 61], "load": [0, 1, 6, 10, 11, 15, 34, 49, 54], "ignor": [0, 7, 39, 54, 61], "group": [0, 8, 39, 49, 61, 64], "case": [0, 2, 3, 49, 58], "pair": [0, 2, 6, 31, 34], "match": [0, 8, 39, 42, 49, 54, 61], "covari": [0, 63], "kept": [0, 11, 59, 62], "togeth": [0, 3, 60], "variabl": [0, 6, 7, 39, 54, 59, 61], "first": [0, 1, 2, 58, 63], "mice": [0, 6], "iter": [0, 6, 24, 41, 57, 61, 64], "quantita": 0, "There": [0, 54, 57, 58], "mean": [0, 6, 34, 54, 64], "cost": 0, "prohibit": 0, "larg": [0, 2, 7, 61, 62, 64], "respect": [0, 1, 6, 7, 39, 54], "leakag": 0, "seen": [0, 55], "ani": [0, 7, 41, 47, 49, 54, 55, 58, 61, 63], "until": [0, 11, 41, 61], "final": [0, 11, 47, 55, 62], "transform": [0, 6, 34, 56, 62], "pickl": [0, 1, 6, 10], "futur": [0, 1, 2, 6, 55, 56, 57, 63], "replic": [0, 1, 3, 33, 34, 41, 42, 43, 54, 55, 58, 61, 62, 63], "both": [0, 6, 8, 10, 39, 54, 55, 64], "mutual": [0, 10, 61], "inform": [0, 10, 11, 55, 59, 61, 62], "profici": 0, "associ": [0, 2, 7, 10, 34, 56, 64], "multisurf": [0, 2, 10, 61, 62, 64], "relief": [0, 10], "epistat": [0, 2], "consider": 0, "fail": [0, 55, 64], "signal": 0, "score": [0, 10, 11, 15, 31, 34, 40, 41, 50, 61], "0": [0, 2, 7, 11, 31, 33, 34, 37, 39, 41, 44, 54, 55, 57, 59, 61, 63, 64], "averag": [0, 11, 31, 34, 40, 42, 44, 61], "bar": [0, 7, 34], "linearli": 0, "quadrat": 0, "reduc": [0, 11, 47, 62], "burden": 0, "rule": [0, 2, 41, 49, 55, 61, 64], "These": [0, 1, 3, 54, 57, 62, 64], "demonstr": [0, 1, 2, 54, 58, 64], "abl": [0, 2, 10, 55, 63, 64], "provid": [0, 2, 54, 55, 56, 58, 61, 64], "interpret": [0, 2, 33, 34, 55, 56, 64], "form": [0, 49, 59], "IF": [0, 64], "THEN": [0, 64], "our": [0, 2, 55, 56, 64], "research": [0, 54, 56, 57, 60, 64], "handl": [0, 3, 64], "scalabl": [0, 2], "nois": [0, 41, 61, 64], "epistasi": 0, "heterogen": [0, 49, 64], "bayesian": [0, 41, 61], "dure": [0, 1, 54, 56, 64], "summar": [0, 1, 2, 34, 40, 61], "sought": 0, "comprehens": 0, "build": 0, "strategi": [0, 55], "gather": [0, 13], "place": [0, 1, 34], "permut": [0, 41, 61], "use_uniform_fi": [0, 41, 61, 64], "fals": [0, 3, 7, 8, 11, 15, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 50, 54, 55, 58, 61, 64], "reli": [0, 64], "16": 0, "accuraci": [0, 34, 50, 64], "f1": [0, 50], "sensit": [0, 2], "recal": [0, 15, 50], "precis": [0, 50], "ppv": 0, "true": [0, 6, 8, 10, 11, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 50, 54, 57, 58, 61, 63, 64], "tp": [0, 50], "neg": [0, 39, 50, 54], "tn": [0, 50], "fp": [0, 50], "fn": [0, 31, 50], "npv": [0, 50], "likeliehood": 0, "ratio": [0, 50], "roc": [0, 34, 42, 44, 61], "auc": [0, 34], "prc": [0, 34, 39, 42, 44, 54, 61], "ap": 0, "reappli": 0, "post": [0, 55], "displai": [0, 54], "n": [0, 2, 24, 32, 61, 64], "fold": [0, 8, 62], "curv": [0, 42, 44, 61], "boxplot": [0, 7, 31, 34, 44, 61], "consist": 0, "lack": 0, "For": [0, 1, 31, 54, 58], "kruskal": [0, 31, 34], "walli": [0, 31, 34], "subsequ": 0, "pairwis": [0, 31, 34], "signific": [0, 1, 7, 31, 34, 37, 39, 44, 55, 61, 62, 64], "given": [0, 3, 7, 31, 34, 54, 55, 56, 58, 59, 60, 62], "either": [0, 2, 3, 10, 39, 41, 54], "singl": [0, 3, 32, 34, 55, 57, 58, 62], "snapshot": 0, "script": [0, 31, 32, 33, 34, 39, 42, 47, 58, 62], "extern": 0, "determin": [0, 2, 6, 31, 34, 54, 64], "yield": [0, 42, 56, 61, 64], "version": [0, 2, 3, 47, 49, 55, 57], "aforement": 0, "section": [1, 3, 54, 58], "directori": [1, 7, 8, 34, 37, 39, 41, 42, 43, 44, 47, 57, 58, 59, 61], "refer": [1, 49, 57], "sampl": [1, 61, 64], "run": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 51, 53, 55, 56, 57, 60, 62, 64], "If": [1, 2, 7, 11, 34, 39, 41, 54, 57, 58, 61, 64], "i": [1, 2, 3, 6, 7, 11, 31, 32, 33, 34, 39, 40, 41, 47, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "demo": [1, 3], "call": [1, 7, 31, 32, 54, 58, 63], "you": [1, 2, 3, 54, 55, 57, 58, 61, 63, 64], "chang": [1, 3, 54, 58], "experiment_nam": [1, 15, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 54, 61], "differ": [1, 2, 3, 31, 34, 54, 55, 57, 61, 64], "name": [1, 3, 6, 7, 8, 10, 11, 13, 16, 34, 37, 39, 40, 41, 42, 43, 44, 47, 54, 55, 58, 59, 61, 63], "your": [1, 3, 57, 59, 61], "should": [1, 39, 54, 57, 58, 59, 64], "find": [1, 32, 57], "_ml_pipeline_report": 1, "great": 1, "start": [1, 5, 7, 41, 53, 61], "metadata": [1, 39], "csv": [1, 3, 8, 11, 34, 39, 49, 54, 58, 61, 63], "anoth": [1, 32], "us": [1, 2, 6, 7, 8, 10, 11, 34, 39, 41, 44, 49, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64], "organ": [1, 34, 62], "page": [1, 2, 32, 57, 58], "binari": [1, 4, 39, 54, 56, 63], "11": [1, 2, 3, 47, 54, 58, 61, 62], "experienc": 1, "alginfo": 1, "includ": [1, 6, 7, 11, 31, 34, 39, 42, 44, 50, 54, 55, 56, 57, 58, 61, 62, 63, 64], "dictionari": [1, 10, 11], "indic": [1, 39, 43, 54, 61], "abbrevi": [1, 54], "filenam": [1, 39], "color": [1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 59], "datasetcomparison": 1, "two": [1, 2, 54, 57, 58, 63], "appear": 1, "data_path": [1, 32, 34, 39, 54, 58], "assign": 1, "d": [1, 3], "d1": 1, "d2": 1, "etc": 1, "alphabet": 1, "order": [1, 3, 34, 50, 55, 58, 62, 64], "demodata": [1, 3, 54, 58, 63], "hcc": [1, 63], "data_example_no_covari": [1, 63], "content": [1, 54], "below": [1, 2, 3, 7, 41, 54, 58, 59, 60, 61, 64], "feel": [1, 63], "skip": [1, 54], "now": [1, 3, 55, 56, 57], "revisit": [1, 54], "cvdataset": 1, "pass": [1, 64], "scale_imput": 1, "preserv": [1, 6, 11, 47], "how": [1, 2, 54, 55, 58, 63], "feature_select": [1, 64], "store": [1, 11, 34, 54], "model_evalu": [1, 12, 13], "applymodel": [1, 63], "hold": [1, 33, 42, 43, 55, 61], "In": [1, 2, 34, 54, 55, 57, 64], "data_exampl": [1, 63], "therefor": 1, "total": [1, 7, 34, 64], "spent": [1, 64], "To": [2, 3, 4, 11, 54, 57, 58, 59, 63], "cite": 2, "streamlin": [2, 3, 54, 55, 57, 58, 59, 60, 63, 64], "preprint": 2, "arxiv": [2, 56], "pleas": [2, 54, 57], "articl": 2, "urbanowicz2022streamlin": 2, "titl": 2, "transpar": [2, 4, 56], "end": [2, 4, 54, 56], "facilit": 2, "author": 2, "urbanowicz": [2, 56], "ryan": [2, 56], "j": 2, "zhang": [2, 56], "robert": [2, 56], "cui": [2, 56], "yuhan": [2, 56], "suri": [2, 56], "pranshu": [2, 56], "journal": 2, "2206": 2, "12002v1": 2, "year": [2, 56], "2022": 2, "wish": [2, 54, 55], "codebas": [2, 55], "misc": 2, "streamline2022": 2, "publish": 2, "github": [2, 54, 57, 58, 59, 63], "repositori": [2, 55, 57, 63], "howpublish": 2, "url": 2, "http": [2, 54, 57, 58, 63], "com": [2, 54, 57, 58, 63], "urbslab": [2, 57, 58, 63], "method": [2, 3, 6, 8, 39, 41, 55, 61, 62], "lesson": 2, "from": [2, 3, 10, 11, 15, 31, 34, 40, 41, 54, 55, 56, 57, 59, 61, 62, 63], "": [2, 3, 8, 32, 33, 39, 42, 54, 55, 58, 59, 62, 64], "previou": [2, 54, 62], "briefli": 2, "earli": 2, "what": [2, 54, 59, 63], "would": [2, 3, 57], "becom": [2, 57], "pancreat": 2, "cancer": [2, 56], "urbanowicz2020rigor": 2, "applic": [2, 3, 6, 43, 56, 62], "nest": 2, "studi": [2, 33, 42], "implic": 2, "assess": 2, "moor": [2, 56], "jason": [2, 56], "h": 2, "ruth": 2, "karen": 2, "stolzenberg": [2, 56], "solomon": [2, 56], "rachael": [2, 56], "lynch": [2, 56], "shannon": [2, 56], "m": [2, 8, 10, 39, 40, 61], "2008": 2, "12829v2": 2, "2020": 2, "can": [2, 3, 6, 34, 54, 55, 57, 58, 59, 60, 62, 63, 64], "priorit": 2, "involv": 2, "multivari": [2, 61], "outcom": [2, 7, 39, 49, 61], "believ": [2, 61], "least": [2, 42, 43, 61], "paper": 2, "introduct": 2, "review": [2, 54, 61], "urbanowicz2018relief": 2, "meeker": 2, "melissa": 2, "la": 2, "cava": 2, "william": 2, "olson": 2, "randal": 2, "informat": 2, "volum": 2, "85": 2, "189": 2, "203": 2, "2018": 2, "elsevi": 2, "next": [2, 54, 55], "overal": [2, 11, 31, 55, 56, 64], "second": [2, 41, 58, 61, 63], "introduc": [2, 56], "rebat": 2, "releif": 2, "urbanowicz2018benchmark": 2, "benchmark": 2, "bioinformat": 2, "schmitt": 2, "peter": 2, "168": 2, "188": 2, "ensembl": [2, 55], "approach": [2, 55, 62], "kind": 2, "verma2018collect": 2, "crucial": 2, "variant": 2, "verma": 2, "shefali": 2, "luca": 2, "anastasia": 2, "xinyuan": 2, "veturi": 2, "yogasudha": 2, "dudek": 2, "scott": 2, "li": 2, "binglan": 2, "ruowang": 2, "kim": 2, "dokyoon": 2, "other": [2, 3, 31, 34, 39, 40, 54, 55, 56, 58], "biodata": 2, "22": 2, "springer": 2, "incorpor": 2, "close": [2, 3], "subfield": 2, "evolutionari": [2, 55], "discov": 2, "constitut": 2, "appeal": 2, "gear": [2, 54], "toward": [2, 54], "tackl": [2, 64], "long": [2, 41, 61], "stand": 2, "135": 2, "multiplex": [2, 3], "due": [2, 7], "guid": [2, 3, 54, 57, 58], "search": 2, "urbanowicz2015exstrac": 2, "descript": [2, 7, 39, 54, 61], "intellig": [2, 55], "8": [2, 3, 57, 58, 62], "89": 2, "116": 2, "2015": 2, "print": 2, "implement": [2, 3, 64], "lc": [2, 41, 61, 64], "dive": 2, "take": [2, 3, 7, 8, 11, 34, 41, 54, 58, 61, 62, 64], "character": 2, "pattern": [2, 64], "work": [2, 34, 40, 57, 61], "link": [2, 54, 57, 63], "better": [2, 34, 64], "understand": 2, "relationship": 2, "captur": [2, 56], "zhang2021lc": 2, "2104": 2, "12844": 2, "2021": 2, "direct": [2, 41, 54, 61], "descend": [2, 34], "uc": 2, "inproceed": 2, "zhang2020scikit": 2, "f": 2, "booktitl": 2, "proceed": 2, "comput": [2, 3, 7, 39, 54, 55, 58, 64], "confer": 2, "companion": 2, "1816": 2, "1823": 2, "origin": [2, 6, 31, 34, 42, 43, 49, 61, 62, 63, 64], "primarili": [2, 10], "textbook": 2, "book": 2, "urbanowicz2017introduct": 2, "brown": 2, "Will": [2, 55], "2017": 2, "easiest": [3, 54], "through": [3, 55, 57, 58, 59, 61, 63], "cli": [3, 58], "few": [3, 54, 58], "addition": 3, "defin": [3, 7, 55, 58, 59], "addit": [3, 54, 55, 57, 58, 61], "setup": [3, 54, 57, 58], "rest": 3, "similarli": [3, 58], "py": [3, 31, 32, 39, 42, 58, 59, 63], "gnu": 3, "editor": [3, 57], "unix": 3, "like": [3, 54, 55, 57, 64], "incredibli": 3, "handi": 3, "open": [3, 54, 57, 58, 63], "ssh": [3, 57], "termin": [3, 57], "detail": [3, 54, 58], "found": [3, 34, 54, 55, 57, 62], "here": [3, 34, 54, 57, 58, 59, 61, 64], "gist": [3, 58], "edit": [3, 57, 58, 63], "upenn": 3, "cfg": [3, 58], "go": [3, 57, 58, 59], "root": [3, 57, 58], "necessari": [3, 47, 54], "press": 3, "ctrl": 3, "y": [3, 7, 31], "emul": [3, 57], "let": 3, "switch": 3, "detach": [3, 57], "keep": [3, 11, 40, 49, 61], "background": [3, 57], "reattach": [3, 57], "pseudo": [3, 57], "decoupl": [3, 57], "main": [3, 39, 42, 47, 54, 57], "protect": [3, 57], "accident": [3, 57], "disconnect": [3, 54, 57], "screen": [3, 57], "login": [3, 57], "continu": [3, 7, 56, 57, 59], "safe": [3, 57], "later": [3, 13, 49, 54, 57], "monitor": [3, 57], "process": [3, 6, 11, 38, 54, 55, 57, 61], "connect": [3, 57], "remot": [3, 57], "secur": [3, 57], "shell": [3, 57], "stai": 3, "mysess": 3, "requir": [3, 54, 55, 57, 58, 61], "b": [3, 57, 58], "multiprocess": [3, 40, 58, 61], "accord": [3, 7], "flag": [3, 7, 8, 11, 37, 39, 44, 61], "job": [3, 4, 6, 7, 8, 10, 11, 15, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 53, 57, 61], "overridden": [3, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "mem": [3, 61], "memori": [3, 39, 48, 54, 61], "reserv": [3, 39, 54, 61], "per": [3, 57, 58], "discuss": [3, 58], "queue": [3, 37, 38, 39, 40, 41, 42, 43, 44, 48, 61], "submiss": 3, "run_clust": [3, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 58, 61], "string": [3, 17, 32, 39, 54], "old": [3, 11, 58], "slurmold": 3, "lsfold": 3, "instead": [3, 34, 41, 54, 55, 61, 64], "submit": [3, 39, 42], "similar": 3, "legaci": 3, "As": [3, 54, 58, 64], "till": [3, 58, 61], "lsf": 3, "i2c2": 3, "c": [3, 57, 58], "abov": [3, 54, 57, 58, 59, 61, 62, 64], "i2c2_norm": 3, "separ": [3, 10, 15, 31, 34, 39, 54, 55, 62], "cedar": [3, 56], "exp": [3, 58, 61], "inst": [3, 58, 61], "instanceid": [3, 58], "befor": [3, 39, 54, 58], "he": [3, 58], "want": [3, 34, 54, 58, 59], "sequenti": [3, 58], "just": [3, 57, 58], "eda": [3, 7, 39, 53, 58, 61], "prepar": [3, 30, 34, 49, 58, 62], "dataprep": [3, 4, 58, 60, 61], "feat": [3, 58, 61], "imp": [3, 58, 61], "sel": [3, 58, 61], "6": [3, 54, 58, 62], "9": [3, 42, 58, 62, 63], "rep": [3, 58, 61], "demorepdata": [3, 58, 63], "10": [3, 7, 8, 33, 39, 41, 54, 58, 61, 62, 63, 64], "del": [3, 58], "tabular": [4, 49, 56], "submodul": [4, 60], "data_process": [4, 5], "modul": [4, 5, 9, 12, 18, 30, 35, 45, 57], "dataprocess": [4, 5, 6], "exploratory_analysi": [4, 5], "edajob": [4, 5, 7], "kfold_partit": [4, 5], "kfoldpartition": [4, 5, 8], "featurefn": [4, 60], "featureimport": [4, 9, 10], "featureselect": [4, 9, 11], "basemodel": [4, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 59], "load_model": [4, 12], "load_class_from_fold": [4, 12, 14], "modeljob": [4, 12], "get_paramet": [4, 12, 16], "is_supported_model": [4, 12, 17], "model_str_to_obj": [4, 12, 17], "artificial_neural_network": [4, 18], "mlpclassifi": [4, 18, 19], "decision_tre": [4, 18], "decisiontreeclassifi": [4, 18, 20], "elastic_net": [4, 18], "elasticnetclassifi": [4, 18, 21, 59], "genetic_program": [4, 18], "gpclassifi": [4, 18, 22], "gradient_boost": [4, 18], "cgbclassifi": [4, 18, 23], "gbclassifi": [4, 18, 23], "lgbclassifi": [4, 18, 23], "xgbclassifi": [4, 18, 23], "learning_bas": [4, 18], "exstracsclassifi": [4, 18, 24], "xcsclassifi": [4, 18, 24], "elcsclassifi": [4, 18, 24], "linear_model": [4, 18, 59], "logisticregress": [4, 18, 25], "naive_bay": [4, 18], "naivebayesclassifi": [4, 18, 26], "neighbour": [4, 18], "knnclassifi": [4, 18, 27], "random_forest": [4, 18], "randomforestclassifi": [4, 18, 28], "support_vector_machin": [4, 18], "supportvectorclassifi": [4, 18, 29], "postanalysi": [4, 60], "dataset_compar": [4, 30], "comparejob": [4, 30, 31], "gererate_report": [4, 30], "reportjob": [4, 30, 32], "list_to_str": [4, 30, 32], "ngi": [4, 30, 32], "model_repl": [4, 30], "replicatejob": [4, 30, 33], "statsjob": [4, 30, 34], "runner": [4, 45, 58, 60], "clean_runn": [4, 35], "cleanrunn": [4, 35, 36], "compare_runn": [4, 35], "comparerunn": [4, 35, 37], "dataprocess_runn": [4, 35], "dataprocessrunn": [4, 35, 38], "eda_runn": [4, 35], "edarunn": [4, 35, 39], "feature_runn": [4, 35], "featureimportancerunn": [4, 35, 40], "featureselectionrunn": [4, 35, 40], "model_runn": [4, 35], "modelexperimentrunn": [4, 35, 41], "replicate_runn": [4, 35], "replicationrunn": [4, 35, 42], "report_runn": [4, 35], "reportrunn": [4, 35, 43], "stats_runn": [4, 35], "statsrunn": [4, 35, 44], "checker": [4, 45], "check_phas": [4, 45, 46], "check_phase_1": [4, 45, 46], "check_phase_10": [4, 45, 46], "check_phase_2": [4, 45, 46], "check_phase_3": [4, 45, 46], "check_phase_4": [4, 45, 46], "check_phase_5": [4, 45, 46], "check_phase_6": [4, 45, 46], "check_phase_7": [4, 45, 46], "check_phase_8": [4, 45, 46], "check_phase_9": [4, 45, 46], "cleanup": [4, 45, 61, 62], "cleaner": [4, 45, 47], "get_clust": [4, 45, 48], "class_ev": [4, 45, 50], "parser": [4, 45], "parser_funct": [4, 45, 52], "process_param": [4, 45, 52], "single_pars": [4, 45, 52], "model_runner_fn": [4, 45, 53], "parallel_eda_cal": [4, 45, 53], "parallel_kfold_cal": [4, 45, 53], "run_job": [4, 45, 53], "runner_fn": [4, 45, 53], "sub_job": [4, 45, 53], "data_sc": [5, 6], "impute_cv_data": [5, 6], "load_data": [5, 6, 45, 49], "save_runtim": [5, 6, 7, 9, 10, 11, 12, 15, 30, 31, 34], "write_cv_fil": [5, 6], "counts_summari": [5, 7], "describe_data": [5, 7], "drop_ignored_rowcol": [5, 7], "feature_correlation_plot": [5, 7], "graph_selector": [5, 7], "identify_feature_typ": [5, 7], "join": [5, 7, 53], "make_log_fold": [5, 7], "missing_count_plot": [5, 7], "missingness_count": [5, 7], "run_explor": [5, 7], "test_selector": [5, 7], "univariate_analysi": [5, 7], "univariate_plot": [5, 7], "cv_partition": [5, 8], "save_dataset": [5, 8], "cv_train_path": [6, 10, 38, 40], "cv_test_path": [6, 38], "experiment_path": [6, 7, 8, 10, 31, 32, 37, 40, 43, 49], "scale_data": [6, 33, 34, 38, 44, 61], "impute_data": [6, 33, 38, 55, 61, 64], "multi_imput": [6, 33, 38, 61, 64], "overwrite_cv": [6, 11, 38, 40, 61], "class_label": [6, 10, 11, 15, 31, 33, 34, 37, 38, 39, 40, 41, 42, 44, 49, 54, 61], "instance_label": [6, 10, 11, 15, 31, 33, 34, 37, 38, 39, 40, 41, 42, 44, 49, 54, 61], "random_st": [6, 7, 8, 10, 13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 38, 39, 40, 41, 59, 61], "sourc": [6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56], "x_train": [6, 13], "x_test": [6, 13, 33], "standardscalar": 6, "featuer": 6, "unit": 6, "varianc": 6, "fit": [6, 12, 13], "alon": [6, 64], "ident": 6, "datafram": [6, 7, 8, 49], "return": [6, 7, 8, 10, 11, 13, 15, 16, 39, 40, 49, 50, 59], "begin": 6, "mode": [6, 54], "header": [6, 13, 39, 49, 54, 58], "data_train": 6, "data_test": 6, "export": [6, 7, 11, 15, 34, 40, 41, 42, 49, 61], "overwrit": [6, 11, 40, 61], "space": [6, 32, 37, 39, 41, 42, 43, 44, 47, 54, 61, 64], "copi": [6, 63], "cvonli": 6, "qualiti": 6, "ignore_featur": [7, 39, 49], "categorical_featur": [7, 39], "explor": [7, 54], "categorical_cutoff": [7, 33, 39, 54, 61], "sig_cutoff": [7, 31, 33, 34, 37, 39, 44, 61], "05": [7, 31, 33, 34, 37, 39, 44, 59], "show_plot": [7, 11, 31, 33, 34, 37, 39, 40, 42, 44], "initi": [7, 8, 10, 39, 55, 59, 62], "function": [7, 11, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 49, 53, 55, 59, 63], "log": [7, 8, 11, 59], "list": [7, 8, 11, 15, 32, 34, 37, 39, 41, 43, 44, 49, 50, 53, 54, 55, 61], "row": [7, 39, 54], "cut": 7, "off": [7, 56, 64], "cutoff": [7, 37, 39, 44, 61], "state": [7, 61], "total_miss": 7, "variou": 7, "graph": 7, "again": 7, "column": [7, 8, 39, 42, 49, 54, 61], "int64": 7, "float64": 7, "uniqu": [7, 39, 49, 54, 55, 61, 62, 64], "drop": [7, 49], "x_data": [7, 49], "calcul": [7, 50, 55, 62], "via": 7, "pearson": 7, "expens": [7, 64], "unless": [7, 55], "difficult": 7, "read": [7, 54], "feature_nam": [7, 13], "assum": 7, "barplot": [7, 11], "independ": [7, 54, 60], "being": [7, 39, 54, 62, 63], "histogram": [7, 34, 44, 61], "missing": 7, "top_featur": [7, 11, 34, 39, 40, 44, 61], "20": [7, 11, 39], "wrapper": [7, 61], "top": [7, 11, 34, 40, 44, 54, 61], "appropri": 7, "p": 7, "show": [7, 11, 34, 37, 44, 58], "sorted_p_list": 7, "check": [7, 39, 54], "whether": [7, 43, 54], "equal": [7, 34], "sort": [7, 10, 11], "partition_method": [8, 39, 61], "n_split": [8, 11, 39], "kfold": 8, "crossvalid": 8, "stratifi": [8, 39, 61], "split": [8, 11, 38, 39, 40, 41], "return_df": 8, "save_df": 8, "r": [8, 57, 58], "empti": [8, 39, 54], "overrid": [8, 41, 61], "train_df": 8, "test_df": 8, "pickle_scor": [9, 10], "prepare_data": [9, 10], "run_multi_surf": [9, 10], "run_mutual_inform": [9, 10], "sort_save_fi_scor": [9, 10], "gen_filtered_dataset": [9, 11], "report_ave_f": [9, 11], "report_informative_featur": [9, 11], "select_featur": [9, 11], "instance_subset": [10, 40, 61, 62, 64], "2000": [10, 11, 40, 41, 59, 64], "use_turf": [10, 40, 61, 64], "turf_pct": [10, 40, 61, 64], "n_job": [10, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 41, 59, 61], "output_nam": 10, "score_dict": 10, "score_sorted_featur": 10, "param": [10, 11, 13, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 41, 47, 52, 53, 59, 61], "tag": 10, "ordered_feature_nam": 10, "alg_nam": 10, "decreas": 10, "full_path": [11, 15, 33, 34, 40, 41, 44], "export_scor": [11, 40, 61], "max_features_to_keep": [11, 40, 61, 64], "filter_poor_featur": [11, 40, 61, 64], "maximum": [11, 13, 32, 34, 41, 54, 61, 64], "poor": 11, "last": [11, 40, 41, 54, 61], "cv_selected_list": 11, "path_to_csv": 11, "dataset_nam": 11, "renam": [11, 63], "algorithmlabel": 11, "selected_feature_list": 11, "meta_feature_rank": 11, "greater": [11, 55], "evid": 11, "storag": 11, "informative_feature_count": 11, "uninformative_feature_count": 11, "uninform": 11, "full": [11, 54], "union": 11, "max": [11, 40, 61], "altern": [11, 54, 55], "grab": 11, "reach": 11, "fpr": [11, 15], "feature_import": [12, 13], "hyper_ev": [12, 13, 59], "data_prep": [12, 15], "export_best_param": [12, 15], "run_model": [12, 15], "model_nam": [13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 59], "cv_fold": [13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 59], "scoring_metr": [13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 41, 44, 59], "balanced_accuraci": [13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 41, 44, 59, 61], "metric_direct": [13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41, 59, 61], "maxim": [13, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 41, 59, 61], "sampler": [13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "unimpl": [13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "stub": [13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "y_train": 13, "n_trail": 13, "caller": 13, "hyper": [13, 41, 55, 59, 61], "eval": 13, "y_test": [13, 33], "dict": [13, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "common": [13, 54], "x_in": 13, "input": [13, 54, 58], "y_pred": [13, 50], "output_path": [15, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 54, 58, 61], "cv_count": [15, 33, 41], "n_trial": [15, 41, 54, 61, 64], "200": [15, 41], "900": [15, 41], "uniform_fi": 15, "save_plot": [15, 41], "static": [15, 34, 47], "file_nam": 15, "param_grid": [15, 59], "metric_list": 15, "tpr": [15, 34], "roc_auc": [15, 44, 61], "prec": [15, 34], "prec_rec_auc": 15, "ave_prec": 15, "fi": [15, 34, 40, 44, 61], "proba": 15, "algorithm_nam": 16, "get": [16, 34, 49, 54, 55, 57, 63], "grid": 16, "small_nam": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 59], "abc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 59], "red": 19, "yellow": 20, "aquamarin": [21, 59], "elast": [21, 59], "net": [21, 59], "en": [21, 54, 58, 59], "purpl": 22, "magenta": 23, "categori": 23, "cornflowerblu": 23, "pink": 23, "light": 23, "cyan": 23, "extrem": 23, "nu": [24, 41, 61, 64], "lawngreen": 24, "oliv": 24, "green": 24, "dimgrei": 25, "silver": 26, "chocol": 27, "knn": [27, 41, 64], "blue": 28, "orang": 29, "best_kruscall_w": [30, 31], "best_mann_whitney_u": [30, 31], "best_wilcoxon_rank": [30, 31], "data_compare_bp": [30, 31], "data_compare_bp_al": [30, 31], "inter_set_best_fn": [30, 31], "inter_set_fn": [30, 31], "kruscall_w": [30, 31], "mann_whitney_u": [30, 31, 34], "temp_summari": [30, 31], "wilcoxon_rank": [30, 31, 34], "footer": [30, 32], "format_fn": [30, 32], "pub_model_mean_stat": [30, 32], "pub_model_median_stat": [30, 32], "pub_runtim": [30, 32], "pub_univari": [30, 32], "eval_model": [30, 33], "impute_rep_data": [30, 33], "scale_rep_data": [30, 33], "composite_fi_plot": [30, 34], "do_fi_boxplot": [30, 34], "do_fi_histogram": [30, 34], "do_model_prc": [30, 34], "do_model_roc": [30, 34], "do_plot_prc": [30, 34], "do_plot_roc": [30, 34], "fi_stat": [30, 34], "frac_fi": [30, 34], "get_fi_to_viz_sort": [30, 34], "kruskal_w": [30, 34], "metric_boxplot": [30, 34], "parse_runtim": [30, 34], "prep_fi": [30, 34], "primary_stat": [30, 34], "save_fi": [30, 34], "save_metric_stat": [30, 34], "select_for_composite_viz": [30, 34], "weight_fi": [30, 34], "weight_frac_fi": [30, 34], "exclud": [31, 32, 33, 37, 41, 42, 43, 44, 54, 55, 61], "datacomparemain": 31, "onc": [31, 32, 33, 63, 64], "entir": [31, 34, 39], "anova": [31, 34], "global_data": 31, "zero": [31, 34], "larger": [31, 34, 41, 54, 55, 58, 61, 62, 64], "set1": 31, "set2": 31, "wilcoxon": [31, 34], "sum": [31, 34], "rep_data_path": [32, 33, 42, 43, 46, 61], "load_algo": [32, 42], "pdf_reportmain": 32, "stats_d": 32, "best_metric_list": 32, "metric_name_list": 32, "ds2": 32, "result_limit": 32, "page_count": 32, "move": [32, 55, 58], "convert": 32, "list1": 32, "greatest": 32, "integ": [32, 41, 59, 61], "dataset_filenam": [33, 42], "dataset_for_rep": [33, 42, 43, 46], "match_label": [33, 39, 42, 49, 54, 61], "cv_partit": [33, 34, 54, 61, 64], "export_feature_correl": [33, 42, 61, 64], "plot_roc": [33, 34, 42, 44, 61, 64], "plot_prc": [33, 34, 42, 44, 61, 64], "plot_metric_boxplot": [33, 34, 42, 44, 61, 64], "previous": [33, 42, 62], "unseen": [33, 42], "doe": [33, 39, 54, 55, 63], "deal": 33, "cv_rep_data": 33, "all_train_feature_list": 33, "40": [34, 40, 44], "metric_weight": [34, 44, 61], "plot_fi_box": [34, 44, 61, 64], "deviat": 34, "fi_list": 34, "all_feature_list_to_viz": 34, "fig_nam": 34, "y_label_text": 34, "normal": 34, "fi_df_list": 34, "fi_med_list": 34, "distribut": 34, "median": [34, 61], "prauc": 34, "mean_recal": 34, "alg_result_t": 34, "rep_data": 34, "mean_fpr": 34, "result_t": 34, "metric_dict": 34, "top_fi_med_norm_list": 34, "fracion": 34, "area": 34, "everi": 34, "intuit": 34, "won": 34, "overli": 34, "repres": 34, "might": 34, "lead": [34, 39, 64], "impress": 34, "real": 34, "estat": 34, "divid": [34, 60], "notabl": [34, 56], "potenti": [34, 39, 64], "alter": 34, "height": 34, "features_to_viz": 34, "all_feature_list": 34, "fi_med_norm_list": 34, "visualis": 34, "index": [34, 57], "weight": [34, 44, 61], "becaus": 34, "perfectli": 34, "kruskal_summari": 34, "pars": 34, "decod": 34, "master_list": 34, "combin": [34, 55, 62], "fi_al": 34, "global_feature_list": 34, "std": 34, "dev": [34, 57, 58, 63], "non_zero_union_featur": 34, "non_zero_union_index": 34, "ave_metric_list": 34, "fi_ave_norm_list": 34, "chosen": 34, "frac": 34, "plai": 34, "role": 34, "viz": 34, "fewer": [34, 64], "top_model_featur": [34, 61], "med_metric_list": 34, "frac_list": 34, "fraction": 34, "sign": 34, "get_cluster_param": [35, 37, 38, 39, 40, 41, 42, 43, 44], "submit_lsf_cluster_job": [35, 37, 38, 39, 40, 41, 42, 43, 44], "submit_slurm_cluster_job": [35, 37, 38, 39, 40, 41, 42, 43, 44], "save_metadata": [35, 38, 39, 40, 41, 42, 44], "make_dir_tre": [35, 39], "run_kfold": [35, 39], "save_alginfo": [35, 41], "get_algorithm": [35, 42], "del_tim": [36, 47], "del_old_cv": [36, 47], "run_parallel": [36, 37, 38, 39, 40, 41, 42, 43, 44, 61], "defq": [37, 38, 39, 40, 41, 42, 43, 44, 48], "reserved_memori": [37, 38, 39, 40, 41, 42, 43, 44, 61], "collat": [37, 43, 44], "str": [37, 41, 43, 44], "exploration_list": 39, "plot_list": 39, "manag": [39, 42], "updat": [39, 54, 55, 57, 58, 62], "exploratoryanalysisjob": 39, "see": [39, 54], "ipynb": [39, 54, 57, 63], "warn": 39, "sure": [39, 57, 58], "desir": [39, 58], "comma": [39, 54, 61], "txt": [39, 49, 54, 57, 58], "na": [39, 54], "accept": [39, 54], "critic": 39, "invalid": [39, 55], "liter": 39, "export_exploratory_analysi": 39, "present": [39, 54, 55, 61], "differenti": 39, "id": [39, 42, 54, 61], "possibl": [39, 44, 54, 55, 56, 58, 61, 64], "throughout": [39, 61], "dataset_path": [39, 44, 49, 61], "exist": 39, "alreadi": [39, 54, 58], "Then": [39, 58], "hierarchi": 39, "eda_obj_list": 39, "mi": [40, 61], "worst": [40, 61], "illustr": [40, 44, 61, 63], "n_dataset": 40, "training_subsampl": [41, 61, 64], "do_lcs_sweep": [41, 61, 64], "lcs_nu": [41, 61], "lcs_n": [41, 61], "lcs_iter": [41, 61], "200000": [41, 64], "lcs_timeout": [41, 61], "1200": 41, "resubmit": 41, "primari": [41, 55, 61], "algo": [41, 61], "subsampl": [41, 61], "permutation_import": [41, 61], "uniformli": [41, 61], "stop": [41, 61], "longer": [41, 54, 61, 64], "finish": [41, 61], "sec": 41, "minut": [41, 54, 58], "tune": [41, 61], "popul": [41, 55, 61], "size": [41, 55, 61], "applymodeljob": 42, "box": [42, 44, 57, 61], "followup": 43, "primary_metr": [44, 61], "len_cv": 44, "rm_tree": [45, 47], "clean_data": [45, 49], "feature_only_data": [45, 49], "get_outcom": [45, 49], "non_feature_data": [45, 49], "set_head": [45, 49], "len_onli": 46, "delet": [47, 54, 62], "temporari": 47, "serv": 47, "conveni": 47, "clutter": 47, "older": [47, 55], "overwritten": 47, "cluster_typ": 48, "tsv": 49, "co": 49, "variat": 49, "realli": 49, "mostli": 49, "learner": 49, "trace": 49, "back": 49, "subgroup": 49, "y_data": 49, "y_true": 50, "likelihood": [50, 57], "bac": 50, "ac": 50, "sp": 50, "pr": 50, "lrp": 50, "lrm": 50, "argv": 52, "mode_param": 52, "config_dict": 52, "eda_job": 53, "kfold_job": 53, "job_list": 53, "instruct": 54, "jump": 54, "benefit": [54, 55], "tip": [54, 64], "its": [54, 55], "beta": [54, 55], "releas": [54, 55, 57], "download": [54, 57], "recent": [54, 57], "activ": [54, 61], "softwar": 54, "feedback": [54, 55, 56], "receiv": 54, "advanc": 54, "about": [54, 58, 63], "visit": 54, "googlecolab": 54, "answer": 54, "27441": 54, "hl": 54, "17s55gajtn5wcev": [54, 57], "dfegtifhvgp73haj4": [54, 57], "usp": [54, 57, 63], "share": [54, 57, 63], "At": 54, "menu": 54, "clear": 54, "underli": 54, "troubleshoot": 54, "modif": 54, "seem": 54, "cell": 54, "preconfigur": 54, "point": 54, "amount": [54, 64], "ram": 54, "disk": 54, "cover": 54, "entireti": 54, "approxim": 54, "uncom": 54, "after": [54, 55, 57, 61], "markdown": 54, "ce": 54, "ll": 54, "collaps": 54, "small": [54, 63], "arrowhead": 54, "left": 54, "side": 54, "scroll": [54, 58], "down": [54, 55, 56, 58], "reveal": 54, "three": 54, "pane": 54, "explain": [54, 55], "rather": 54, "breviti": [54, 61], "slightli": 54, "argument": [54, 61], "commandlin": [54, 55], "sai": 54, "upload": 54, "ask": 54, "extens": 54, "letter": 54, "word": 54, "match_id": 54, "demo_run": 54, "boolean": 54, "mydriv": 54, "my_data": 54, "my_first_experi": 54, "block": [54, 58], "simpli": [54, 58, 63], "applytorepl": 54, "14": 54, "consequ": 54, "produc": 54, "accur": 54, "Its": 54, "decid": 54, "ignore_features_path": [54, 61], "categorical_feature_path": [54, 61], "exlud": 54, "higher": [54, 62], "increas": 54, "encourag": 54, "idea": 55, "welcom": [55, 56], "suggest": [55, 56, 59], "contribut": [55, 56], "collabor": [55, 56], "contact": 55, "harsh": [55, 56], "bandhei": [55, 56], "csh": 55, "org": 55, "encount": 55, "noteworthi": 55, "add": 55, "streamin": 55, "templat": 55, "dask_jobqueu": 55, "project": 55, "undergon": 55, "major": 55, "refactor": 55, "reorgan": 55, "rebrand": 55, "branch": [55, 57, 58], "repair": 55, "intention": 55, "explicitli": 55, "turn": [55, 64], "guarante": 55, "inher": 55, "correctli": [55, 59], "under": [55, 56, 64], "certain": [55, 56, 64], "situat": [55, 64], "often": [55, 64], "look": 55, "accordingli": [55, 58], "aw": 55, "azur": 55, "docker": 55, "progress": 55, "todo": 55, "multiclass": 55, "endpoint": 55, "shaplei": 55, "opportun": 55, "intern": 55, "clearli": 55, "yet": [55, 64], "fulli": 55, "smarter": 55, "avoid": [55, 56, 64], "alwai": 55, "cycl": 55, "slow": 55, "gain": [55, 56], "refin": 55, "flexibl": 55, "high": 55, "automl": 56, "empow": 56, "tool": [56, 57], "focus": 56, "enhanc": 56, "goal": 56, "strength": 56, "weak": 56, "break": 56, "compon": 56, "postprocess": 56, "claim": 56, "viabl": 56, "assembl": 56, "nor": 56, "expans": 56, "improv": [56, 61], "hopefulli": 56, "univers": 56, "pennsylvania": 56, "fox": 56, "chase": 56, "center": 56, "sinai": 56, "medic": 56, "kansa": 56, "bulk": 56, "special": 56, "thank": 56, "patryk": 56, "orzechowski": 56, "trang": 56, "le": 56, "sy": 56, "hwang": 56, "richard": 56, "wilson": 56, "pedro": 56, "ribeiro": 56, "ulyss": 56, "magalang": 56, "allan": 56, "pack": 56, "brendan": 56, "keenan": 56, "daniel": 56, "moweri": 56, "diego": 56, "mazzotti": 56, "bleed": 57, "edg": 57, "merg": 57, "git": [57, 58], "fine": 57, "conda": 57, "doc": 57, "anaconda": 57, "html": [57, 58], "nativ": 57, "resolut": 57, "especi": 57, "maco": 57, "confirm": 57, "clone": [57, 58], "cd": [57, 58], "pip": [57, 58], "plan": 57, "usag": 57, "web": [57, 58], "browser": [57, 58], "carri": 57, "extra": 57, "essenti": 57, "big": 57, "tmux": 57, "nano": 57, "vim": 57, "error": [57, 64], "upgrad": 57, "lightgbm": 57, "pypi": 57, "doesn": [57, 58], "solv": 57, "forg": 57, "haven": 58, "goto": 58, "ve": 58, "ipypnb": 58, "assumpt": 58, "satisfi": 58, "info": [58, 59], "readthedoc": 58, "io": 58, "latest": 58, "mandatori": 58, "reflect": 58, "locat": [58, 62], "ryanu": 58, "kernel": 58, "restart": 58, "depend": 58, "hardwar": 58, "hour": 58, "context": 58, "impact": 58, "thorough": 58, "pick": [58, 59], "config_fil": 58, "flase": 58, "wrap": 59, "warp": 59, "deriv": 59, "sklearn": 59, "sgdclassifi": 59, "sgd": 59, "def": 59, "__init__": 59, "self": 59, "super": 59, "penalti": 59, "elasticnet": 59, "loss": 59, "log_loss": 59, "modified_hub": 59, "alpha": 59, "04": 59, "max_it": 59, "1000": 59, "l1_ratio": 59, "001": 59, "class_weight": 59, "suggest_categor": 59, "suggest_float": 59, "suggest_int": 59, "mean_cv_scor": 59, "dynam": 59, "arbitrarili": 59, "And": 59, "init": 59, "written": 59, "proper": 59, "api": [59, 60], "discret": 59, "linear": 59, "architectur": 60, "complement": 60, "subpackag": 60, "remind": 61, "sometim": 61, "config": 61, "verbos": 61, "ot": 61, "do_till_report": 61, "do_eda": 61, "droppedfeatur": 61, "cf": 61, "patit": 61, "stratif": 61, "cat": 61, "sig": 61, "fc": 61, "export_univariate_plot": [61, 64], "rand": 61, "dont": 61, "panic": 61, "gigabyt": 61, "do_dataprep": 61, "uniform": 61, "otherwis": [61, 64], "earlier": 61, "ones": 61, "do_feat_imp": 61, "do_mutual_info": 61, "do_multisurf": 61, "turf": 61, "around": 61, "half": 61, "pct": 61, "proport": 61, "dictat": 61, "core": [61, 62], "dedic": 61, "sub": 61, "do_feat_sel": 61, "overwrite_cv_feat": 61, "do_model": 61, "do_al": 61, "seper": 61, "kn": 61, "uniformfi": 61, "export_hyper_sweep_plot": 61, "do_stat": 61, "eachalgorithm": 61, "fi_box": 61, "do_compare_dataset": 61, "do_report": 61, "do_repl": 61, "rep_export_feature_correl": 61, "rep_plot_prc": 61, "rep_plot_metric_boxplot": 61, "do_rep_report": 61, "do_cleanup": 61, "loos": 62, "correspond": 62, "schemat": 62, "fast": 62, "except": [62, 64], "sped": 62, "deactiv": 62, "slowli": 62, "moder": 62, "irrelev": 62, "efficaci": 63, "hepatocellular": 63, "carcinoma": 63, "taken": 63, "uci": 63, "165": 63, "49": 63, "fetaur": 63, "mix": 63, "imbal": 63, "63": 63, "deceas": 63, "102": 63, "suriv": 63, "ag": 63, "diagnosi": 63, "gender": 63, "furthermor": 63, "ad": 63, "data_example_rep": 63, "overfit": [63, 64], "expect": [63, 64], "good": 63, "without": [63, 64], "whatsoev": 63, "blob": 63, "perman": 63, "15qiae4zxruoylm": 63, "y8hu": 63, "bkwwms7jhxml": 63, "demand": 64, "much": 64, "power": 64, "longest": 64, "smaller": 64, "strongli": 64, "000": 64, "lower": 64, "speed": 64, "too": 64, "low": 64, "enough": 64, "speak": 64, "willing": 64, "spend": 64, "opposit": 64, "computation": 64, "newer": 64, "contrast": 64, "wide": 64, "made": 64, "readabl": 64, "achiev": 64, "100": 64, "significantli": 64, "pressur": 64, "perfect": 64, "noisi": 64, "exponenti": 64, "coeffici": 64, "datapreprocess": 64, "cannot": 64}, "objects": {"": [[4, 0, 0, "-", "streamline"]], "streamline": [[5, 0, 0, "-", "dataprep"], [9, 0, 0, "-", "featurefns"], [12, 0, 0, "-", "modeling"], [18, 0, 0, "-", "models"], [30, 0, 0, "-", "postanalysis"], [35, 0, 0, "-", "runners"], [45, 0, 0, "-", "utils"]], "streamline.dataprep": [[6, 0, 0, "-", "data_process"], [7, 0, 0, "-", "exploratory_analysis"], [8, 0, 0, "-", "kfold_partitioning"]], "streamline.dataprep.data_process": [[6, 1, 1, "", "DataProcessing"]], "streamline.dataprep.data_process.DataProcessing": [[6, 2, 1, "", "data_scaling"], [6, 2, 1, "", "impute_cv_data"], [6, 2, 1, "", "load_data"], [6, 2, 1, "", "run"], [6, 2, 1, "", "save_runtime"], [6, 2, 1, "", "write_cv_files"]], "streamline.dataprep.exploratory_analysis": [[7, 1, 1, "", "EDAJob"]], "streamline.dataprep.exploratory_analysis.EDAJob": [[7, 2, 1, "", "counts_summary"], [7, 2, 1, "", "describe_data"], [7, 2, 1, "", "drop_ignored_rowcols"], [7, 2, 1, "", "feature_correlation_plot"], [7, 2, 1, "", "graph_selector"], [7, 2, 1, "", "identify_feature_types"], [7, 2, 1, "", "join"], [7, 2, 1, "", "make_log_folders"], [7, 2, 1, "", "missing_count_plot"], [7, 2, 1, "", "missingness_counts"], [7, 2, 1, "", "run"], [7, 2, 1, "", "run_explore"], [7, 2, 1, "", "save_runtime"], [7, 2, 1, "", "start"], [7, 2, 1, "", "test_selector"], [7, 2, 1, "", "univariate_analysis"], [7, 2, 1, "", "univariate_plots"]], "streamline.dataprep.kfold_partitioning": [[8, 1, 1, "", "KFoldPartitioner"]], "streamline.dataprep.kfold_partitioning.KFoldPartitioner": [[8, 2, 1, "", "cv_partitioner"], [8, 2, 1, "", "run"], [8, 2, 1, "", "save_datasets"]], "streamline.featurefns": [[10, 0, 0, "-", "importance"], [11, 0, 0, "-", "selection"]], "streamline.featurefns.importance": [[10, 1, 1, "", "FeatureImportance"]], "streamline.featurefns.importance.FeatureImportance": [[10, 2, 1, "", "pickle_scores"], [10, 2, 1, "", "prepare_data"], [10, 2, 1, "", "run"], [10, 2, 1, "", "run_multi_surf"], [10, 2, 1, "", "run_mutual_information"], [10, 2, 1, "", "save_runtime"], [10, 2, 1, "", "sort_save_fi_scores"]], "streamline.featurefns.selection": [[11, 1, 1, "", "FeatureSelection"]], "streamline.featurefns.selection.FeatureSelection": [[11, 2, 1, "", "gen_filtered_datasets"], [11, 2, 1, "", "report_ave_fs"], [11, 2, 1, "", "report_informative_features"], [11, 2, 1, "", "run"], [11, 2, 1, "", "save_runtime"], [11, 2, 1, "", "select_features"]], "streamline.modeling": [[13, 0, 0, "-", "basemodel"], [14, 0, 0, "-", "load_models"], [15, 0, 0, "-", "modeljob"], [16, 0, 0, "-", "parameters"], [17, 0, 0, "-", "utils"]], "streamline.modeling.basemodel": [[13, 1, 1, "", "BaseModel"]], "streamline.modeling.basemodel.BaseModel": [[13, 2, 1, "", "feature_importance"], [13, 2, 1, "", "fit"], [13, 2, 1, "", "hyper_eval"], [13, 2, 1, "", "model_evaluation"], [13, 2, 1, "", "objective"], [13, 2, 1, "", "optimize"], [13, 2, 1, "", "predict"]], "streamline.modeling.load_models": [[14, 3, 1, "", "load_class_from_folder"]], "streamline.modeling.modeljob": [[15, 1, 1, "", "ModelJob"]], "streamline.modeling.modeljob.ModelJob": [[15, 2, 1, "", "data_prep"], [15, 2, 1, "", "export_best_params"], [15, 2, 1, "", "run"], [15, 2, 1, "", "run_model"], [15, 2, 1, "", "save_runtime"]], "streamline.modeling.parameters": [[16, 3, 1, "", "get_parameters"]], "streamline.modeling.utils": [[17, 3, 1, "", "is_supported_model"], [17, 3, 1, "", "model_str_to_obj"]], "streamline.models": [[19, 0, 0, "-", "artificial_neural_network"], [20, 0, 0, "-", "decision_tree"], [21, 0, 0, "-", "elastic_net"], [22, 0, 0, "-", "genetic_programming"], [23, 0, 0, "-", "gradient_boosting"], [24, 0, 0, "-", "learning_based"], [25, 0, 0, "-", "linear_model"], [26, 0, 0, "-", "naive_bayes"], [27, 0, 0, "-", "neighbouring"], [28, 0, 0, "-", "random_forest"], [29, 0, 0, "-", "support_vector_machine"]], "streamline.models.artificial_neural_network": [[19, 1, 1, "", "MLPClassifier"]], "streamline.models.artificial_neural_network.MLPClassifier": [[19, 4, 1, "", "color"], [19, 4, 1, "", "model_name"], [19, 2, 1, "", "objective"], [19, 4, 1, "", "small_name"]], "streamline.models.decision_tree": [[20, 1, 1, "", "DecisionTreeClassifier"]], "streamline.models.decision_tree.DecisionTreeClassifier": [[20, 4, 1, "", "color"], [20, 4, 1, "", "model_name"], [20, 2, 1, "", "objective"], [20, 4, 1, "", "small_name"]], "streamline.models.elastic_net": [[21, 1, 1, "", "ElasticNetClassifier"]], "streamline.models.elastic_net.ElasticNetClassifier": [[21, 4, 1, "", "color"], [21, 4, 1, "", "model_name"], [21, 2, 1, "", "objective"], [21, 4, 1, "", "small_name"]], "streamline.models.genetic_programming": [[22, 1, 1, "", "GPClassifier"]], "streamline.models.genetic_programming.GPClassifier": [[22, 4, 1, "", "color"], [22, 4, 1, "", "model_name"], [22, 2, 1, "", "objective"], [22, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting": [[23, 1, 1, "", "CGBClassifier"], [23, 1, 1, "", "GBClassifier"], [23, 1, 1, "", "LGBClassifier"], [23, 1, 1, "", "XGBClassifier"]], "streamline.models.gradient_boosting.CGBClassifier": [[23, 4, 1, "", "color"], [23, 4, 1, "", "model_name"], [23, 2, 1, "", "objective"], [23, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.GBClassifier": [[23, 4, 1, "", "color"], [23, 4, 1, "", "model_name"], [23, 2, 1, "", "objective"], [23, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.LGBClassifier": [[23, 4, 1, "", "color"], [23, 4, 1, "", "model_name"], [23, 2, 1, "", "objective"], [23, 4, 1, "", "small_name"]], "streamline.models.gradient_boosting.XGBClassifier": [[23, 4, 1, "", "color"], [23, 4, 1, "", "model_name"], [23, 2, 1, "", "objective"], [23, 4, 1, "", "small_name"]], "streamline.models.learning_based": [[24, 1, 1, "", "ExSTraCSClassifier"], [24, 1, 1, "", "XCSClassifier"], [24, 1, 1, "", "eLCSClassifier"]], "streamline.models.learning_based.ExSTraCSClassifier": [[24, 4, 1, "", "color"], [24, 4, 1, "", "model_name"], [24, 2, 1, "", "objective"], [24, 4, 1, "", "small_name"]], "streamline.models.learning_based.XCSClassifier": [[24, 4, 1, "", "color"], [24, 4, 1, "", "model_name"], [24, 2, 1, "", "objective"], [24, 4, 1, "", "small_name"]], "streamline.models.learning_based.eLCSClassifier": [[24, 4, 1, "", "color"], [24, 4, 1, "", "model_name"], [24, 2, 1, "", "objective"], [24, 4, 1, "", "small_name"]], "streamline.models.linear_model": [[25, 1, 1, "", "LogisticRegression"]], "streamline.models.linear_model.LogisticRegression": [[25, 4, 1, "", "color"], [25, 4, 1, "", "model_name"], [25, 2, 1, "", "objective"], [25, 4, 1, "", "small_name"]], "streamline.models.naive_bayes": [[26, 1, 1, "", "NaiveBayesClassifier"]], "streamline.models.naive_bayes.NaiveBayesClassifier": [[26, 4, 1, "", "color"], [26, 4, 1, "", "model_name"], [26, 2, 1, "", "objective"], [26, 4, 1, "", "small_name"]], "streamline.models.neighbouring": [[27, 1, 1, "", "KNNClassifier"]], "streamline.models.neighbouring.KNNClassifier": [[27, 4, 1, "", "color"], [27, 4, 1, "", "model_name"], [27, 2, 1, "", "objective"], [27, 4, 1, "", "small_name"]], "streamline.models.random_forest": [[28, 1, 1, "", "RandomForestClassifier"]], "streamline.models.random_forest.RandomForestClassifier": [[28, 4, 1, "", "color"], [28, 4, 1, "", "model_name"], [28, 2, 1, "", "objective"], [28, 4, 1, "", "small_name"]], "streamline.models.support_vector_machine": [[29, 1, 1, "", "SupportVectorClassifier"]], "streamline.models.support_vector_machine.SupportVectorClassifier": [[29, 4, 1, "", "color"], [29, 4, 1, "", "model_name"], [29, 2, 1, "", "objective"], [29, 4, 1, "", "small_name"]], "streamline.postanalysis": [[31, 0, 0, "-", "dataset_compare"], [32, 0, 0, "-", "gererate_report"], [33, 0, 0, "-", "model_replicate"], [34, 0, 0, "-", "statistics"]], "streamline.postanalysis.dataset_compare": [[31, 1, 1, "", "CompareJob"]], "streamline.postanalysis.dataset_compare.CompareJob": [[31, 2, 1, "", "best_kruscall_wallis"], [31, 2, 1, "", "best_mann_whitney_u"], [31, 2, 1, "", "best_wilcoxon_rank"], [31, 2, 1, "", "data_compare_bp"], [31, 2, 1, "", "data_compare_bp_all"], [31, 2, 1, "", "inter_set_best_fn"], [31, 2, 1, "", "inter_set_fn"], [31, 2, 1, "", "kruscall_wallis"], [31, 2, 1, "", "mann_whitney_u"], [31, 2, 1, "", "run"], [31, 2, 1, "", "save_runtime"], [31, 2, 1, "", "temp_summary"], [31, 2, 1, "", "wilcoxon_rank"]], "streamline.postanalysis.gererate_report": [[32, 1, 1, "", "ReportJob"], [32, 3, 1, "", "list_to_string"], [32, 3, 1, "", "ngi"]], "streamline.postanalysis.gererate_report.ReportJob": [[32, 2, 1, "", "footer"], [32, 2, 1, "", "format_fn"], [32, 2, 1, "", "job"], [32, 2, 1, "", "pub_model_mean_stats"], [32, 2, 1, "", "pub_model_median_stats"], [32, 2, 1, "", "pub_runtime"], [32, 2, 1, "", "pub_univariate"], [32, 2, 1, "", "run"]], "streamline.postanalysis.model_replicate": [[33, 1, 1, "", "ReplicateJob"]], "streamline.postanalysis.model_replicate.ReplicateJob": [[33, 2, 1, "", "eval_model"], [33, 2, 1, "", "impute_rep_data"], [33, 2, 1, "", "run"], [33, 2, 1, "", "scale_rep_data"]], "streamline.postanalysis.statistics": [[34, 1, 1, "", "StatsJob"]], "streamline.postanalysis.statistics.StatsJob": [[34, 2, 1, "", "composite_fi_plot"], [34, 2, 1, "", "do_fi_boxplots"], [34, 2, 1, "", "do_fi_histogram"], [34, 2, 1, "", "do_model_prc"], [34, 2, 1, "", "do_model_roc"], [34, 2, 1, "", "do_plot_prc"], [34, 2, 1, "", "do_plot_roc"], [34, 2, 1, "", "fi_stats"], [34, 2, 1, "", "frac_fi"], [34, 2, 1, "", "get_fi_to_viz_sorted"], [34, 2, 1, "", "kruskal_wallis"], [34, 2, 1, "", "mann_whitney_u"], [34, 2, 1, "", "metric_boxplots"], [34, 2, 1, "", "parse_runtime"], [34, 2, 1, "", "prep_fi"], [34, 2, 1, "", "preparation"], [34, 2, 1, "", "primary_stats"], [34, 2, 1, "", "run"], [34, 2, 1, "", "save_fi"], [34, 2, 1, "", "save_metric_stats"], [34, 2, 1, "", "save_runtime"], [34, 2, 1, "", "select_for_composite_viz"], [34, 2, 1, "", "weight_fi"], [34, 2, 1, "", "weight_frac_fi"], [34, 2, 1, "", "wilcoxon_rank"]], "streamline.runners": [[36, 0, 0, "-", "clean_runner"], [37, 0, 0, "-", "compare_runner"], [38, 0, 0, "-", "dataprocess_runner"], [39, 0, 0, "-", "eda_runner"], [40, 0, 0, "-", "feature_runner"], [41, 0, 0, "-", "model_runner"], [42, 0, 0, "-", "replicate_runner"], [43, 0, 0, "-", "report_runner"], [44, 0, 0, "-", "stats_runner"]], "streamline.runners.clean_runner": [[36, 1, 1, "", "CleanRunner"]], "streamline.runners.clean_runner.CleanRunner": [[36, 2, 1, "", "run"]], "streamline.runners.compare_runner": [[37, 1, 1, "", "CompareRunner"]], "streamline.runners.compare_runner.CompareRunner": [[37, 2, 1, "", "get_cluster_params"], [37, 2, 1, "", "run"], [37, 2, 1, "", "submit_lsf_cluster_job"], [37, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.dataprocess_runner": [[38, 1, 1, "", "DataProcessRunner"]], "streamline.runners.dataprocess_runner.DataProcessRunner": [[38, 2, 1, "", "get_cluster_params"], [38, 2, 1, "", "run"], [38, 2, 1, "", "save_metadata"], [38, 2, 1, "", "submit_lsf_cluster_job"], [38, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.eda_runner": [[39, 1, 1, "", "EDARunner"]], "streamline.runners.eda_runner.EDARunner": [[39, 2, 1, "", "get_cluster_params"], [39, 2, 1, "", "make_dir_tree"], [39, 2, 1, "", "run"], [39, 2, 1, "", "run_kfold"], [39, 2, 1, "", "save_metadata"], [39, 2, 1, "", "submit_lsf_cluster_job"], [39, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.feature_runner": [[40, 1, 1, "", "FeatureImportanceRunner"], [40, 1, 1, "", "FeatureSelectionRunner"]], "streamline.runners.feature_runner.FeatureImportanceRunner": [[40, 2, 1, "", "get_cluster_params"], [40, 2, 1, "", "run"], [40, 2, 1, "", "save_metadata"], [40, 2, 1, "", "submit_lsf_cluster_job"], [40, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.feature_runner.FeatureSelectionRunner": [[40, 2, 1, "", "get_cluster_params"], [40, 2, 1, "", "run"], [40, 2, 1, "", "save_metadata"], [40, 2, 1, "", "submit_lsf_cluster_job"], [40, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.model_runner": [[41, 1, 1, "", "ModelExperimentRunner"]], "streamline.runners.model_runner.ModelExperimentRunner": [[41, 2, 1, "", "get_cluster_params"], [41, 2, 1, "", "run"], [41, 2, 1, "", "save_alginfo"], [41, 2, 1, "", "save_metadata"], [41, 2, 1, "", "submit_lsf_cluster_job"], [41, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.replicate_runner": [[42, 1, 1, "", "ReplicationRunner"]], "streamline.runners.replicate_runner.ReplicationRunner": [[42, 2, 1, "", "get_algorithms"], [42, 2, 1, "", "get_cluster_params"], [42, 2, 1, "", "run"], [42, 2, 1, "", "save_metadata"], [42, 2, 1, "", "submit_lsf_cluster_job"], [42, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.report_runner": [[43, 1, 1, "", "ReportRunner"]], "streamline.runners.report_runner.ReportRunner": [[43, 2, 1, "", "get_cluster_params"], [43, 2, 1, "", "run"], [43, 2, 1, "", "submit_lsf_cluster_job"], [43, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.runners.stats_runner": [[44, 1, 1, "", "StatsRunner"]], "streamline.runners.stats_runner.StatsRunner": [[44, 2, 1, "", "get_cluster_params"], [44, 2, 1, "", "run"], [44, 2, 1, "", "save_metadata"], [44, 2, 1, "", "submit_lsf_cluster_job"], [44, 2, 1, "", "submit_slurm_cluster_job"]], "streamline.utils": [[46, 0, 0, "-", "checker"], [47, 0, 0, "-", "cleanup"], [48, 0, 0, "-", "cluster"], [49, 0, 0, "-", "dataset"], [50, 0, 0, "-", "evaluation"], [51, 0, 0, "-", "job"], [52, 0, 0, "-", "parser"], [53, 0, 0, "-", "runners"]], "streamline.utils.checker": [[46, 3, 1, "", "check_phase"], [46, 3, 1, "", "check_phase_1"], [46, 3, 1, "", "check_phase_10"], [46, 3, 1, "", "check_phase_2"], [46, 3, 1, "", "check_phase_3"], [46, 3, 1, "", "check_phase_4"], [46, 3, 1, "", "check_phase_5"], [46, 3, 1, "", "check_phase_6"], [46, 3, 1, "", "check_phase_7"], [46, 3, 1, "", "check_phase_8"], [46, 3, 1, "", "check_phase_9"]], "streamline.utils.cleanup": [[47, 1, 1, "", "Cleaner"]], "streamline.utils.cleanup.Cleaner": [[47, 2, 1, "", "rm_tree"], [47, 2, 1, "", "run"]], "streamline.utils.cluster": [[48, 3, 1, "", "get_cluster"]], "streamline.utils.dataset": [[49, 1, 1, "", "Dataset"]], "streamline.utils.dataset.Dataset": [[49, 2, 1, "", "clean_data"], [49, 2, 1, "", "feature_only_data"], [49, 2, 1, "", "get_outcome"], [49, 2, 1, "", "load_data"], [49, 2, 1, "", "non_feature_data"], [49, 2, 1, "", "set_headers"]], "streamline.utils.evaluation": [[50, 3, 1, "", "class_eval"]], "streamline.utils.job": [[51, 1, 1, "", "Job"]], "streamline.utils.job.Job": [[51, 2, 1, "", "run"], [51, 2, 1, "", "run_cluster"]], "streamline.utils.parser": [[52, 3, 1, "", "parser_function"], [52, 3, 1, "", "process_params"], [52, 3, 1, "", "single_parse"]], "streamline.utils.runners": [[53, 3, 1, "", "model_runner_fn"], [53, 3, 1, "", "parallel_eda_call"], [53, 3, 1, "", "parallel_kfold_call"], [53, 3, 1, "", "run_jobs"], [53, 3, 1, "", "runner_fn"], [53, 3, 1, "", "sub_jobs"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"about": 0, "faq": 0, "what": 0, "level": 0, "comput": 0, "skill": 0, "i": 0, "requir": 0, "us": [0, 3, 58], "can": 0, "doe": 0, "streamlin": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 61, 62], "includ": 0, "how": 0, "differ": 0, "from": 0, "other": [0, 64], "automl": 0, "tool": [0, 3], "run": [0, 3, 54, 58, 61, 63], "mode": 0, "implement": 0, "highlight": 0, "explain": 1, "output": [1, 63], "citat": 2, "urb": 2, "lab": 2, "relat": 2, "research": 2, "A": 2, "rigor": 2, "ml": 2, "pipelin": [2, 63], "binari": 2, "classif": 2, "relief": 2, "base": 2, "featur": 2, "import": [2, 10], "estim": 2, "collect": 2, "select": [2, 11], "learn": 2, "classifi": 2, "system": [2, 58], "hpc": 3, "cluster": [3, 48, 57], "help": 3, "nano": 3, "tmux": 3, "command": [3, 58], "line": [3, 58], "interfac": [3, 58], "config": [3, 58], "file": [3, 58], "paramet": [3, 16, 58, 61, 64], "packag": [4, 5, 9, 12, 18, 30, 35, 45], "subpackag": 4, "dataprep": [5, 6, 7, 8], "submodul": [5, 9, 12, 18, 30, 35, 45], "data_process": 6, "modul": [6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53], "exploratory_analysi": 7, "kfold_partit": 8, "featurefn": [9, 10, 11], "model": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 59, 64], "basemodel": 13, "load_model": 14, "modeljob": 15, "util": [17, 45, 46, 47, 48, 49, 50, 51, 52, 53], "artificial_neural_network": 19, "decision_tre": 20, "elastic_net": 21, "genetic_program": 22, "gradient_boost": 23, "learning_bas": 24, "linear_model": 25, "naive_bay": 26, "neighbour": 27, "random_forest": 28, "support_vector_machin": 29, "postanalysi": [30, 31, 32, 33, 34], "dataset_compar": 31, "gererate_report": 32, "model_repl": 33, "statist": 34, "runner": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 53], "clean_runn": 36, "compare_runn": 37, "dataprocess_runn": 38, "eda_runn": 39, "feature_runn": 40, "model_runn": 41, "replicate_runn": 42, "report_runn": 43, "stats_runn": 44, "checker": 46, "cleanup": 47, "dataset": [49, 54, 58], "evalu": 50, "job": 51, "parser": 52, "googl": [54, 57], "colab": 54, "demo": [54, 58], "inspect": 54, "your": [54, 58], "first": 54, "own": [54, 58], "develop": 55, "note": 55, "chang": 55, "log": 55, "histori": 55, "plan": 55, "extens": 55, "improv": [55, 64], "known": [55, 57], "issu": [55, 57], "logist": 55, "capabl": 55, "algorithm": [55, 59], "overview": [56, 61], "schemat": 56, "preprint": 56, "disclaim": 56, "acknowledg": 56, "instal": 57, "colaboratori": 57, "local": [57, 58], "jupyt": [57, 58], "notebook": [57, 58], "ad": 59, "new": 59, "code": 60, "document": 60, "phase": 62, "describ": 62, "sampl": 63, "demonstr": 63, "data": 63, "folder": 63, "figur": 63, "summari": 63, "guidelin": 64, "set": 64, "reduc": 64, "runtim": 64, "perform": 64}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"About (FAQs)": [[0, "about-faqs"]], "What level of computing skill is required for use?": [[0, "what-level-of-computing-skill-is-required-for-use"]], "What can it be used for?": [[0, "what-can-it-be-used-for"]], "What does STREAMLINE include?": [[0, "what-does-streamline-include"]], "How is STREAMLINE different from other AutoML tools?": [[0, "how-is-streamline-different-from-other-automl-tools"]], "STREAMLINE Run Modes": [[0, "streamline-run-modes"]], "Implementation Highlights": [[0, "implementation-highlights"]], "Explaining STREAMLINE Output": [[1, "explaining-streamline-output"]], "Citations": [[2, "citations"]], "URBS-lab related research": [[2, "urbs-lab-related-research"]], "A rigorous ML pipeline for binary classification": [[2, "a-rigorous-ml-pipeline-for-binary-classification"]], "Relief-based feature importance estimation": [[2, "relief-based-feature-importance-estimation"]], "Collective feature selection": [[2, "collective-feature-selection"]], "Learning classifier systems": [[2, "learning-classifier-systems"]], "Running on HPC Clusters": [[3, "running-on-hpc-clusters"]], "Helpful Tools": [[3, "helpful-tools"]], "nano": [[3, "nano"]], "tmux": [[3, "tmux"]], "Running using command line interface": [[3, "running-using-command-line-interface"]], "Using config file": [[3, "using-config-file"], [58, "using-config-file"]], "Using command-line parameters": [[3, "using-command-line-parameters"], [58, "using-command-line-parameters"]], "streamline package": [[4, "module-streamline"]], "Subpackages": [[4, "subpackages"]], "streamline.dataprep package": [[5, "module-streamline.dataprep"]], "Submodules": [[5, "submodules"], [9, "submodules"], [12, "submodules"], [18, "submodules"], [30, "submodules"], [35, "submodules"], [45, "submodules"]], "streamline.dataprep.data_process module": [[6, "module-streamline.dataprep.data_process"]], "streamline.dataprep.exploratory_analysis module": [[7, "module-streamline.dataprep.exploratory_analysis"]], "streamline.dataprep.kfold_partitioning module": [[8, "module-streamline.dataprep.kfold_partitioning"]], "streamline.featurefns package": [[9, "module-streamline.featurefns"]], "streamline.featurefns.importance module": [[10, "module-streamline.featurefns.importance"]], "streamline.featurefns.selection module": [[11, "module-streamline.featurefns.selection"]], "streamline.modeling package": [[12, "module-streamline.modeling"]], "streamline.modeling.basemodel module": [[13, "module-streamline.modeling.basemodel"]], "streamline.modeling.load_models module": [[14, "module-streamline.modeling.load_models"]], "streamline.modeling.modeljob module": [[15, "module-streamline.modeling.modeljob"]], "streamline.modeling.parameters module": [[16, "module-streamline.modeling.parameters"]], "streamline.modeling.utils module": [[17, "module-streamline.modeling.utils"]], "streamline.models package": [[18, "module-streamline.models"]], "streamline.models.artificial_neural_network module": [[19, "module-streamline.models.artificial_neural_network"]], "streamline.models.decision_tree module": [[20, "module-streamline.models.decision_tree"]], "streamline.models.elastic_net module": [[21, "module-streamline.models.elastic_net"]], "streamline.models.genetic_programming module": [[22, "module-streamline.models.genetic_programming"]], "streamline.models.gradient_boosting module": [[23, "module-streamline.models.gradient_boosting"]], "streamline.models.learning_based module": [[24, "module-streamline.models.learning_based"]], "streamline.models.linear_model module": [[25, "module-streamline.models.linear_model"]], "streamline.models.naive_bayes module": [[26, "module-streamline.models.naive_bayes"]], "streamline.models.neighbouring module": [[27, "module-streamline.models.neighbouring"]], "streamline.models.random_forest module": [[28, "module-streamline.models.random_forest"]], "streamline.models.support_vector_machine module": [[29, "module-streamline.models.support_vector_machine"]], "streamline.postanalysis package": [[30, "module-streamline.postanalysis"]], "streamline.postanalysis.dataset_compare module": [[31, "module-streamline.postanalysis.dataset_compare"]], "streamline.postanalysis.gererate_report module": [[32, "module-streamline.postanalysis.gererate_report"]], "streamline.postanalysis.model_replicate module": [[33, "module-streamline.postanalysis.model_replicate"]], "streamline.postanalysis.statistics module": [[34, "module-streamline.postanalysis.statistics"]], "streamline.runners package": [[35, "module-streamline.runners"]], "streamline.runners.clean_runner module": [[36, "module-streamline.runners.clean_runner"]], "streamline.runners.compare_runner module": [[37, "module-streamline.runners.compare_runner"]], "streamline.runners.dataprocess_runner module": [[38, "module-streamline.runners.dataprocess_runner"]], "streamline.runners.eda_runner module": [[39, "module-streamline.runners.eda_runner"]], "streamline.runners.feature_runner module": [[40, "module-streamline.runners.feature_runner"]], "streamline.runners.model_runner module": [[41, "module-streamline.runners.model_runner"]], "streamline.runners.replicate_runner module": [[42, "module-streamline.runners.replicate_runner"]], "streamline.runners.report_runner module": [[43, "module-streamline.runners.report_runner"]], "streamline.runners.stats_runner module": [[44, "module-streamline.runners.stats_runner"]], "streamline.utils package": [[45, "module-streamline.utils"]], "streamline.utils.checker module": [[46, "module-streamline.utils.checker"]], "streamline.utils.cleanup module": [[47, "module-streamline.utils.cleanup"]], "streamline.utils.cluster module": [[48, "module-streamline.utils.cluster"]], "streamline.utils.dataset module": [[49, "module-streamline.utils.dataset"]], "streamline.utils.evaluation module": [[50, "module-streamline.utils.evaluation"]], "streamline.utils.job module": [[51, "module-streamline.utils.job"]], "streamline.utils.parser module": [[52, "module-streamline.utils.parser"]], "streamline.utils.runners module": [[53, "module-streamline.utils.runners"]], "Running on Google Colab": [[54, "running-on-google-colab"]], "Running on Demo Dataset": [[54, "running-on-demo-dataset"], [58, "running-on-demo-dataset"]], "Inspecting your first run": [[54, "inspecting-your-first-run"]], "Running on your own datasets": [[54, "running-on-your-own-datasets"]], "Development notes": [[55, "development-notes"]], "Change Log": [[55, "change-log"]], "History": [[55, "history"]], "Planned extensions/improvements": [[55, "planned-extensions-improvements"]], "Known issues": [[55, "known-issues"]], "Logistical extensions": [[55, "logistical-extensions"]], "Capabilities extensions": [[55, "capabilities-extensions"]], "Algorithmic extensions": [[55, "algorithmic-extensions"]], "STREAMLINE": [[56, "streamline"]], "Overview": [[56, "overview"], [61, "overview"]], "Schematic": [[56, "schematic"]], "Preprint": [[56, "preprint"]], "Disclaimer": [[56, "disclaimer"]], "Acknowledgements": [[56, "acknowledgements"]], "Installation": [[57, "installation"]], "Google Colaboratory": [[57, "google-colaboratory"]], "Local Installation": [[57, "local-installation"]], "Jupyter Notebook": [[57, "jupyter-notebook"]], "Cluster Installation": [[57, "cluster-installation"]], "Known Issues": [[57, "known-issues"]], "Running on Local System": [[58, "running-on-local-system"]], "Running on Jupyter Notebook": [[58, "running-on-jupyter-notebook"]], "Running on Your Own Datasets": [[58, "running-on-your-own-datasets"]], "Running on command line interface": [[58, "running-on-command-line-interface"]], "Adding New Modeling Algorithms": [[59, "adding-new-modeling-algorithms"]], "Code Documentation": [[60, "code-documentation"]], "STREAMLINE Run Parameters": [[61, "streamline-run-parameters"]], "STREAMLINE Phases Described": [[62, "streamline-phases-described"]], "Sample Outputs": [[63, "sample-outputs"]], "Demonstration Data": [[63, "demonstration-data"]], "Run Pipeline and Output Folders": [[63, "run-pipeline-and-output-folders"]], "Figures Summary": [[63, "figures-summary"]], "Guidelines for Setting Parameters": [[64, "guidelines-for-setting-parameters"]], "Reducing runtime": [[64, "reducing-runtime"]], "Improving Modeling Performance": [[64, "improving-modeling-performance"]], "Other Guidelines": [[64, "other-guidelines"]]}, "indexentries": {"module": [[4, "module-streamline"], [5, "module-streamline.dataprep"], [6, "module-streamline.dataprep.data_process"], [7, "module-streamline.dataprep.exploratory_analysis"], [8, "module-streamline.dataprep.kfold_partitioning"], [9, "module-streamline.featurefns"], [10, "module-streamline.featurefns.importance"], [11, "module-streamline.featurefns.selection"], [12, "module-streamline.modeling"], [13, "module-streamline.modeling.basemodel"], [14, "module-streamline.modeling.load_models"], [15, "module-streamline.modeling.modeljob"], [16, "module-streamline.modeling.parameters"], [17, "module-streamline.modeling.utils"], [18, "module-streamline.models"], [19, "module-streamline.models.artificial_neural_network"], [20, "module-streamline.models.decision_tree"], [21, "module-streamline.models.elastic_net"], [22, "module-streamline.models.genetic_programming"], [23, "module-streamline.models.gradient_boosting"], [24, "module-streamline.models.learning_based"], [25, "module-streamline.models.linear_model"], [26, "module-streamline.models.naive_bayes"], [27, "module-streamline.models.neighbouring"], [28, "module-streamline.models.random_forest"], [29, "module-streamline.models.support_vector_machine"], [30, "module-streamline.postanalysis"], [31, "module-streamline.postanalysis.dataset_compare"], [32, "module-streamline.postanalysis.gererate_report"], [33, "module-streamline.postanalysis.model_replicate"], [34, "module-streamline.postanalysis.statistics"], [35, "module-streamline.runners"], [36, "module-streamline.runners.clean_runner"], [37, "module-streamline.runners.compare_runner"], [38, "module-streamline.runners.dataprocess_runner"], [39, "module-streamline.runners.eda_runner"], [40, "module-streamline.runners.feature_runner"], [41, "module-streamline.runners.model_runner"], [42, "module-streamline.runners.replicate_runner"], [43, "module-streamline.runners.report_runner"], [44, "module-streamline.runners.stats_runner"], [45, "module-streamline.utils"], [46, "module-streamline.utils.checker"], [47, "module-streamline.utils.cleanup"], [48, "module-streamline.utils.cluster"], [49, "module-streamline.utils.dataset"], [50, "module-streamline.utils.evaluation"], [51, "module-streamline.utils.job"], [52, "module-streamline.utils.parser"], [53, "module-streamline.utils.runners"]], "streamline": [[4, "module-streamline"]], "streamline.dataprep": [[5, "module-streamline.dataprep"]], "dataprocessing (class in streamline.dataprep.data_process)": [[6, "streamline.dataprep.data_process.DataProcessing"]], "data_scaling() (streamline.dataprep.data_process.dataprocessing method)": [[6, "streamline.dataprep.data_process.DataProcessing.data_scaling"]], "impute_cv_data() (streamline.dataprep.data_process.dataprocessing method)": [[6, "streamline.dataprep.data_process.DataProcessing.impute_cv_data"]], "load_data() (streamline.dataprep.data_process.dataprocessing method)": [[6, "streamline.dataprep.data_process.DataProcessing.load_data"]], "run() (streamline.dataprep.data_process.dataprocessing method)": [[6, "streamline.dataprep.data_process.DataProcessing.run"]], "save_runtime() (streamline.dataprep.data_process.dataprocessing method)": [[6, "streamline.dataprep.data_process.DataProcessing.save_runtime"]], "streamline.dataprep.data_process": [[6, "module-streamline.dataprep.data_process"]], "write_cv_files() (streamline.dataprep.data_process.dataprocessing method)": [[6, "streamline.dataprep.data_process.DataProcessing.write_cv_files"]], "edajob (class in streamline.dataprep.exploratory_analysis)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob"]], "counts_summary() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.counts_summary"]], "describe_data() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.describe_data"]], "drop_ignored_rowcols() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.drop_ignored_rowcols"]], "feature_correlation_plot() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.feature_correlation_plot"]], "graph_selector() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.graph_selector"]], "identify_feature_types() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.identify_feature_types"]], "join() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.join"]], "make_log_folders() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.make_log_folders"]], "missing_count_plot() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.missing_count_plot"]], "missingness_counts() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.missingness_counts"]], "run() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.run"]], "run_explore() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.run_explore"]], "save_runtime() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.save_runtime"]], "start() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.start"]], "streamline.dataprep.exploratory_analysis": [[7, "module-streamline.dataprep.exploratory_analysis"]], "test_selector() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.test_selector"]], "univariate_analysis() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.univariate_analysis"]], "univariate_plots() (streamline.dataprep.exploratory_analysis.edajob method)": [[7, "streamline.dataprep.exploratory_analysis.EDAJob.univariate_plots"]], "kfoldpartitioner (class in streamline.dataprep.kfold_partitioning)": [[8, "streamline.dataprep.kfold_partitioning.KFoldPartitioner"]], "cv_partitioner() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[8, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.cv_partitioner"]], "run() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[8, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.run"]], "save_datasets() (streamline.dataprep.kfold_partitioning.kfoldpartitioner method)": [[8, "streamline.dataprep.kfold_partitioning.KFoldPartitioner.save_datasets"]], "streamline.dataprep.kfold_partitioning": [[8, "module-streamline.dataprep.kfold_partitioning"]], "streamline.featurefns": [[9, "module-streamline.featurefns"]], "featureimportance (class in streamline.featurefns.importance)": [[10, "streamline.featurefns.importance.FeatureImportance"]], "pickle_scores() (streamline.featurefns.importance.featureimportance method)": [[10, "streamline.featurefns.importance.FeatureImportance.pickle_scores"]], "prepare_data() (streamline.featurefns.importance.featureimportance method)": [[10, "streamline.featurefns.importance.FeatureImportance.prepare_data"]], "run() (streamline.featurefns.importance.featureimportance method)": [[10, "streamline.featurefns.importance.FeatureImportance.run"]], "run_multi_surf() (streamline.featurefns.importance.featureimportance method)": [[10, "streamline.featurefns.importance.FeatureImportance.run_multi_surf"]], "run_mutual_information() (streamline.featurefns.importance.featureimportance method)": [[10, "streamline.featurefns.importance.FeatureImportance.run_mutual_information"]], "save_runtime() (streamline.featurefns.importance.featureimportance method)": [[10, "streamline.featurefns.importance.FeatureImportance.save_runtime"]], "sort_save_fi_scores() (streamline.featurefns.importance.featureimportance method)": [[10, "streamline.featurefns.importance.FeatureImportance.sort_save_fi_scores"]], "streamline.featurefns.importance": [[10, "module-streamline.featurefns.importance"]], "featureselection (class in streamline.featurefns.selection)": [[11, "streamline.featurefns.selection.FeatureSelection"]], "gen_filtered_datasets() (streamline.featurefns.selection.featureselection method)": [[11, "streamline.featurefns.selection.FeatureSelection.gen_filtered_datasets"]], "report_ave_fs() (streamline.featurefns.selection.featureselection method)": [[11, "streamline.featurefns.selection.FeatureSelection.report_ave_fs"]], "report_informative_features() (streamline.featurefns.selection.featureselection method)": [[11, "streamline.featurefns.selection.FeatureSelection.report_informative_features"]], "run() (streamline.featurefns.selection.featureselection method)": [[11, "streamline.featurefns.selection.FeatureSelection.run"]], "save_runtime() (streamline.featurefns.selection.featureselection method)": [[11, "streamline.featurefns.selection.FeatureSelection.save_runtime"]], "select_features() (streamline.featurefns.selection.featureselection method)": [[11, "streamline.featurefns.selection.FeatureSelection.select_features"]], "streamline.featurefns.selection": [[11, "module-streamline.featurefns.selection"]], "streamline.modeling": [[12, "module-streamline.modeling"]], "basemodel (class in streamline.modeling.basemodel)": [[13, "streamline.modeling.basemodel.BaseModel"]], "feature_importance() (streamline.modeling.basemodel.basemodel method)": [[13, "streamline.modeling.basemodel.BaseModel.feature_importance"]], "fit() (streamline.modeling.basemodel.basemodel method)": [[13, "streamline.modeling.basemodel.BaseModel.fit"]], "hyper_eval() (streamline.modeling.basemodel.basemodel method)": [[13, "streamline.modeling.basemodel.BaseModel.hyper_eval"]], "model_evaluation() (streamline.modeling.basemodel.basemodel method)": [[13, "streamline.modeling.basemodel.BaseModel.model_evaluation"]], "objective() (streamline.modeling.basemodel.basemodel method)": [[13, "streamline.modeling.basemodel.BaseModel.objective"]], "optimize() (streamline.modeling.basemodel.basemodel method)": [[13, "streamline.modeling.basemodel.BaseModel.optimize"]], "predict() (streamline.modeling.basemodel.basemodel method)": [[13, "streamline.modeling.basemodel.BaseModel.predict"]], "streamline.modeling.basemodel": [[13, "module-streamline.modeling.basemodel"]], "load_class_from_folder() (in module streamline.modeling.load_models)": [[14, "streamline.modeling.load_models.load_class_from_folder"]], "streamline.modeling.load_models": [[14, "module-streamline.modeling.load_models"]], "modeljob (class in streamline.modeling.modeljob)": [[15, "streamline.modeling.modeljob.ModelJob"]], "data_prep() (streamline.modeling.modeljob.modeljob method)": [[15, "streamline.modeling.modeljob.ModelJob.data_prep"]], "export_best_params() (streamline.modeling.modeljob.modeljob static method)": [[15, "streamline.modeling.modeljob.ModelJob.export_best_params"]], "run() (streamline.modeling.modeljob.modeljob method)": [[15, "streamline.modeling.modeljob.ModelJob.run"]], "run_model() (streamline.modeling.modeljob.modeljob method)": [[15, "streamline.modeling.modeljob.ModelJob.run_model"]], "save_runtime() (streamline.modeling.modeljob.modeljob method)": [[15, "streamline.modeling.modeljob.ModelJob.save_runtime"]], "streamline.modeling.modeljob": [[15, "module-streamline.modeling.modeljob"]], "get_parameters() (in module streamline.modeling.parameters)": [[16, "streamline.modeling.parameters.get_parameters"]], "streamline.modeling.parameters": [[16, "module-streamline.modeling.parameters"]], "is_supported_model() (in module streamline.modeling.utils)": [[17, "streamline.modeling.utils.is_supported_model"]], "model_str_to_obj() (in module streamline.modeling.utils)": [[17, "streamline.modeling.utils.model_str_to_obj"]], "streamline.modeling.utils": [[17, "module-streamline.modeling.utils"]], "streamline.models": [[18, "module-streamline.models"]], "mlpclassifier (class in streamline.models.artificial_neural_network)": [[19, "streamline.models.artificial_neural_network.MLPClassifier"]], "color (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[19, "streamline.models.artificial_neural_network.MLPClassifier.color"]], "model_name (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[19, "streamline.models.artificial_neural_network.MLPClassifier.model_name"]], "objective() (streamline.models.artificial_neural_network.mlpclassifier method)": [[19, "streamline.models.artificial_neural_network.MLPClassifier.objective"]], "small_name (streamline.models.artificial_neural_network.mlpclassifier attribute)": [[19, "streamline.models.artificial_neural_network.MLPClassifier.small_name"]], "streamline.models.artificial_neural_network": [[19, "module-streamline.models.artificial_neural_network"]], "decisiontreeclassifier (class in streamline.models.decision_tree)": [[20, "streamline.models.decision_tree.DecisionTreeClassifier"]], "color (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[20, "streamline.models.decision_tree.DecisionTreeClassifier.color"]], "model_name (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[20, "streamline.models.decision_tree.DecisionTreeClassifier.model_name"]], "objective() (streamline.models.decision_tree.decisiontreeclassifier method)": [[20, "streamline.models.decision_tree.DecisionTreeClassifier.objective"]], "small_name (streamline.models.decision_tree.decisiontreeclassifier attribute)": [[20, "streamline.models.decision_tree.DecisionTreeClassifier.small_name"]], "streamline.models.decision_tree": [[20, "module-streamline.models.decision_tree"]], "elasticnetclassifier (class in streamline.models.elastic_net)": [[21, "streamline.models.elastic_net.ElasticNetClassifier"]], "color (streamline.models.elastic_net.elasticnetclassifier attribute)": [[21, "streamline.models.elastic_net.ElasticNetClassifier.color"]], "model_name (streamline.models.elastic_net.elasticnetclassifier attribute)": [[21, "streamline.models.elastic_net.ElasticNetClassifier.model_name"]], "objective() (streamline.models.elastic_net.elasticnetclassifier method)": [[21, "streamline.models.elastic_net.ElasticNetClassifier.objective"]], "small_name (streamline.models.elastic_net.elasticnetclassifier attribute)": [[21, "streamline.models.elastic_net.ElasticNetClassifier.small_name"]], "streamline.models.elastic_net": [[21, "module-streamline.models.elastic_net"]], "gpclassifier (class in streamline.models.genetic_programming)": [[22, "streamline.models.genetic_programming.GPClassifier"]], "color (streamline.models.genetic_programming.gpclassifier attribute)": [[22, "streamline.models.genetic_programming.GPClassifier.color"]], "model_name (streamline.models.genetic_programming.gpclassifier attribute)": [[22, "streamline.models.genetic_programming.GPClassifier.model_name"]], "objective() (streamline.models.genetic_programming.gpclassifier method)": [[22, "streamline.models.genetic_programming.GPClassifier.objective"]], "small_name (streamline.models.genetic_programming.gpclassifier attribute)": [[22, "streamline.models.genetic_programming.GPClassifier.small_name"]], "streamline.models.genetic_programming": [[22, "module-streamline.models.genetic_programming"]], "cgbclassifier (class in streamline.models.gradient_boosting)": [[23, "streamline.models.gradient_boosting.CGBClassifier"]], "gbclassifier (class in streamline.models.gradient_boosting)": [[23, "streamline.models.gradient_boosting.GBClassifier"]], "lgbclassifier (class in streamline.models.gradient_boosting)": [[23, "streamline.models.gradient_boosting.LGBClassifier"]], "xgbclassifier (class in streamline.models.gradient_boosting)": [[23, "streamline.models.gradient_boosting.XGBClassifier"]], "color (streamline.models.gradient_boosting.cgbclassifier attribute)": [[23, "streamline.models.gradient_boosting.CGBClassifier.color"]], "color (streamline.models.gradient_boosting.gbclassifier attribute)": [[23, "streamline.models.gradient_boosting.GBClassifier.color"]], "color (streamline.models.gradient_boosting.lgbclassifier attribute)": [[23, "streamline.models.gradient_boosting.LGBClassifier.color"]], "color (streamline.models.gradient_boosting.xgbclassifier attribute)": [[23, "streamline.models.gradient_boosting.XGBClassifier.color"]], "model_name (streamline.models.gradient_boosting.cgbclassifier attribute)": [[23, "streamline.models.gradient_boosting.CGBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.gbclassifier attribute)": [[23, "streamline.models.gradient_boosting.GBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.lgbclassifier attribute)": [[23, "streamline.models.gradient_boosting.LGBClassifier.model_name"]], "model_name (streamline.models.gradient_boosting.xgbclassifier attribute)": [[23, "streamline.models.gradient_boosting.XGBClassifier.model_name"]], "objective() (streamline.models.gradient_boosting.cgbclassifier method)": [[23, "streamline.models.gradient_boosting.CGBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.gbclassifier method)": [[23, "streamline.models.gradient_boosting.GBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.lgbclassifier method)": [[23, "streamline.models.gradient_boosting.LGBClassifier.objective"]], "objective() (streamline.models.gradient_boosting.xgbclassifier method)": [[23, "streamline.models.gradient_boosting.XGBClassifier.objective"]], "small_name (streamline.models.gradient_boosting.cgbclassifier attribute)": [[23, "streamline.models.gradient_boosting.CGBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.gbclassifier attribute)": [[23, "streamline.models.gradient_boosting.GBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.lgbclassifier attribute)": [[23, "streamline.models.gradient_boosting.LGBClassifier.small_name"]], "small_name (streamline.models.gradient_boosting.xgbclassifier attribute)": [[23, "streamline.models.gradient_boosting.XGBClassifier.small_name"]], "streamline.models.gradient_boosting": [[23, "module-streamline.models.gradient_boosting"]], "exstracsclassifier (class in streamline.models.learning_based)": [[24, "streamline.models.learning_based.ExSTraCSClassifier"]], "xcsclassifier (class in streamline.models.learning_based)": [[24, "streamline.models.learning_based.XCSClassifier"]], "color (streamline.models.learning_based.exstracsclassifier attribute)": [[24, "streamline.models.learning_based.ExSTraCSClassifier.color"]], "color (streamline.models.learning_based.xcsclassifier attribute)": [[24, "streamline.models.learning_based.XCSClassifier.color"]], "color (streamline.models.learning_based.elcsclassifier attribute)": [[24, "streamline.models.learning_based.eLCSClassifier.color"]], "elcsclassifier (class in streamline.models.learning_based)": [[24, "streamline.models.learning_based.eLCSClassifier"]], "model_name (streamline.models.learning_based.exstracsclassifier attribute)": [[24, "streamline.models.learning_based.ExSTraCSClassifier.model_name"]], "model_name (streamline.models.learning_based.xcsclassifier attribute)": [[24, "streamline.models.learning_based.XCSClassifier.model_name"]], "model_name (streamline.models.learning_based.elcsclassifier attribute)": [[24, "streamline.models.learning_based.eLCSClassifier.model_name"]], "objective() (streamline.models.learning_based.exstracsclassifier method)": [[24, "streamline.models.learning_based.ExSTraCSClassifier.objective"]], "objective() (streamline.models.learning_based.xcsclassifier method)": [[24, "streamline.models.learning_based.XCSClassifier.objective"]], "objective() (streamline.models.learning_based.elcsclassifier method)": [[24, "streamline.models.learning_based.eLCSClassifier.objective"]], "small_name (streamline.models.learning_based.exstracsclassifier attribute)": [[24, "streamline.models.learning_based.ExSTraCSClassifier.small_name"]], "small_name (streamline.models.learning_based.xcsclassifier attribute)": [[24, "streamline.models.learning_based.XCSClassifier.small_name"]], "small_name (streamline.models.learning_based.elcsclassifier attribute)": [[24, "streamline.models.learning_based.eLCSClassifier.small_name"]], "streamline.models.learning_based": [[24, "module-streamline.models.learning_based"]], "logisticregression (class in streamline.models.linear_model)": [[25, "streamline.models.linear_model.LogisticRegression"]], "color (streamline.models.linear_model.logisticregression attribute)": [[25, "streamline.models.linear_model.LogisticRegression.color"]], "model_name (streamline.models.linear_model.logisticregression attribute)": [[25, "streamline.models.linear_model.LogisticRegression.model_name"]], "objective() (streamline.models.linear_model.logisticregression method)": [[25, "streamline.models.linear_model.LogisticRegression.objective"]], "small_name (streamline.models.linear_model.logisticregression attribute)": [[25, "streamline.models.linear_model.LogisticRegression.small_name"]], "streamline.models.linear_model": [[25, "module-streamline.models.linear_model"]], "naivebayesclassifier (class in streamline.models.naive_bayes)": [[26, "streamline.models.naive_bayes.NaiveBayesClassifier"]], "color (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[26, "streamline.models.naive_bayes.NaiveBayesClassifier.color"]], "model_name (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[26, "streamline.models.naive_bayes.NaiveBayesClassifier.model_name"]], "objective() (streamline.models.naive_bayes.naivebayesclassifier method)": [[26, "streamline.models.naive_bayes.NaiveBayesClassifier.objective"]], "small_name (streamline.models.naive_bayes.naivebayesclassifier attribute)": [[26, "streamline.models.naive_bayes.NaiveBayesClassifier.small_name"]], "streamline.models.naive_bayes": [[26, "module-streamline.models.naive_bayes"]], "knnclassifier (class in streamline.models.neighbouring)": [[27, "streamline.models.neighbouring.KNNClassifier"]], "color (streamline.models.neighbouring.knnclassifier attribute)": [[27, "streamline.models.neighbouring.KNNClassifier.color"]], "model_name (streamline.models.neighbouring.knnclassifier attribute)": [[27, "streamline.models.neighbouring.KNNClassifier.model_name"]], "objective() (streamline.models.neighbouring.knnclassifier method)": [[27, "streamline.models.neighbouring.KNNClassifier.objective"]], "small_name (streamline.models.neighbouring.knnclassifier attribute)": [[27, "streamline.models.neighbouring.KNNClassifier.small_name"]], "streamline.models.neighbouring": [[27, "module-streamline.models.neighbouring"]], "randomforestclassifier (class in streamline.models.random_forest)": [[28, "streamline.models.random_forest.RandomForestClassifier"]], "color (streamline.models.random_forest.randomforestclassifier attribute)": [[28, "streamline.models.random_forest.RandomForestClassifier.color"]], "model_name (streamline.models.random_forest.randomforestclassifier attribute)": [[28, "streamline.models.random_forest.RandomForestClassifier.model_name"]], "objective() (streamline.models.random_forest.randomforestclassifier method)": [[28, "streamline.models.random_forest.RandomForestClassifier.objective"]], "small_name (streamline.models.random_forest.randomforestclassifier attribute)": [[28, "streamline.models.random_forest.RandomForestClassifier.small_name"]], "streamline.models.random_forest": [[28, "module-streamline.models.random_forest"]], "supportvectorclassifier (class in streamline.models.support_vector_machine)": [[29, "streamline.models.support_vector_machine.SupportVectorClassifier"]], "color (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[29, "streamline.models.support_vector_machine.SupportVectorClassifier.color"]], "model_name (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[29, "streamline.models.support_vector_machine.SupportVectorClassifier.model_name"]], "objective() (streamline.models.support_vector_machine.supportvectorclassifier method)": [[29, "streamline.models.support_vector_machine.SupportVectorClassifier.objective"]], "small_name (streamline.models.support_vector_machine.supportvectorclassifier attribute)": [[29, "streamline.models.support_vector_machine.SupportVectorClassifier.small_name"]], "streamline.models.support_vector_machine": [[29, "module-streamline.models.support_vector_machine"]], "streamline.postanalysis": [[30, "module-streamline.postanalysis"]], "comparejob (class in streamline.postanalysis.dataset_compare)": [[31, "streamline.postanalysis.dataset_compare.CompareJob"]], "best_kruscall_wallis() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.best_kruscall_wallis"]], "best_mann_whitney_u() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.best_mann_whitney_u"]], "best_wilcoxon_rank() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.best_wilcoxon_rank"]], "data_compare_bp() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.data_compare_bp"]], "data_compare_bp_all() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.data_compare_bp_all"]], "inter_set_best_fn() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.inter_set_best_fn"]], "inter_set_fn() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.inter_set_fn"]], "kruscall_wallis() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.kruscall_wallis"]], "mann_whitney_u() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.mann_whitney_u"]], "run() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.run"]], "save_runtime() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.save_runtime"]], "streamline.postanalysis.dataset_compare": [[31, "module-streamline.postanalysis.dataset_compare"]], "temp_summary() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.temp_summary"]], "wilcoxon_rank() (streamline.postanalysis.dataset_compare.comparejob method)": [[31, "streamline.postanalysis.dataset_compare.CompareJob.wilcoxon_rank"]], "reportjob (class in streamline.postanalysis.gererate_report)": [[32, "streamline.postanalysis.gererate_report.ReportJob"]], "footer() (streamline.postanalysis.gererate_report.reportjob method)": [[32, "streamline.postanalysis.gererate_report.ReportJob.footer"]], "format_fn() (streamline.postanalysis.gererate_report.reportjob method)": [[32, "streamline.postanalysis.gererate_report.ReportJob.format_fn"]], "job() (streamline.postanalysis.gererate_report.reportjob method)": [[32, "streamline.postanalysis.gererate_report.ReportJob.job"]], "list_to_string() (in module streamline.postanalysis.gererate_report)": [[32, "streamline.postanalysis.gererate_report.list_to_string"]], "ngi() (in module streamline.postanalysis.gererate_report)": [[32, "streamline.postanalysis.gererate_report.ngi"]], "pub_model_mean_stats() (streamline.postanalysis.gererate_report.reportjob method)": [[32, "streamline.postanalysis.gererate_report.ReportJob.pub_model_mean_stats"]], "pub_model_median_stats() (streamline.postanalysis.gererate_report.reportjob method)": [[32, "streamline.postanalysis.gererate_report.ReportJob.pub_model_median_stats"]], "pub_runtime() (streamline.postanalysis.gererate_report.reportjob method)": [[32, "streamline.postanalysis.gererate_report.ReportJob.pub_runtime"]], "pub_univariate() (streamline.postanalysis.gererate_report.reportjob method)": [[32, "streamline.postanalysis.gererate_report.ReportJob.pub_univariate"]], "run() (streamline.postanalysis.gererate_report.reportjob method)": [[32, "streamline.postanalysis.gererate_report.ReportJob.run"]], "streamline.postanalysis.gererate_report": [[32, "module-streamline.postanalysis.gererate_report"]], "replicatejob (class in streamline.postanalysis.model_replicate)": [[33, "streamline.postanalysis.model_replicate.ReplicateJob"]], "eval_model() (streamline.postanalysis.model_replicate.replicatejob method)": [[33, "streamline.postanalysis.model_replicate.ReplicateJob.eval_model"]], "impute_rep_data() (streamline.postanalysis.model_replicate.replicatejob method)": [[33, "streamline.postanalysis.model_replicate.ReplicateJob.impute_rep_data"]], "run() (streamline.postanalysis.model_replicate.replicatejob method)": [[33, "streamline.postanalysis.model_replicate.ReplicateJob.run"]], "scale_rep_data() (streamline.postanalysis.model_replicate.replicatejob method)": [[33, "streamline.postanalysis.model_replicate.ReplicateJob.scale_rep_data"]], "streamline.postanalysis.model_replicate": [[33, "module-streamline.postanalysis.model_replicate"]], "statsjob (class in streamline.postanalysis.statistics)": [[34, "streamline.postanalysis.statistics.StatsJob"]], "composite_fi_plot() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.composite_fi_plot"]], "do_fi_boxplots() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.do_fi_boxplots"]], "do_fi_histogram() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.do_fi_histogram"]], "do_model_prc() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.do_model_prc"]], "do_model_roc() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.do_model_roc"]], "do_plot_prc() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.do_plot_prc"]], "do_plot_roc() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.do_plot_roc"]], "fi_stats() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.fi_stats"]], "frac_fi() (streamline.postanalysis.statistics.statsjob static method)": [[34, "streamline.postanalysis.statistics.StatsJob.frac_fi"]], "get_fi_to_viz_sorted() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.get_fi_to_viz_sorted"]], "kruskal_wallis() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.kruskal_wallis"]], "mann_whitney_u() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.mann_whitney_u"]], "metric_boxplots() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.metric_boxplots"]], "parse_runtime() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.parse_runtime"]], "prep_fi() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.prep_fi"]], "preparation() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.preparation"]], "primary_stats() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.primary_stats"]], "run() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.run"]], "save_fi() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.save_fi"]], "save_metric_stats() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.save_metric_stats"]], "save_runtime() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.save_runtime"]], "select_for_composite_viz() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.select_for_composite_viz"]], "streamline.postanalysis.statistics": [[34, "module-streamline.postanalysis.statistics"]], "weight_fi() (streamline.postanalysis.statistics.statsjob static method)": [[34, "streamline.postanalysis.statistics.StatsJob.weight_fi"]], "weight_frac_fi() (streamline.postanalysis.statistics.statsjob static method)": [[34, "streamline.postanalysis.statistics.StatsJob.weight_frac_fi"]], "wilcoxon_rank() (streamline.postanalysis.statistics.statsjob method)": [[34, "streamline.postanalysis.statistics.StatsJob.wilcoxon_rank"]], "streamline.runners": [[35, "module-streamline.runners"]], "cleanrunner (class in streamline.runners.clean_runner)": [[36, "streamline.runners.clean_runner.CleanRunner"]], "run() (streamline.runners.clean_runner.cleanrunner method)": [[36, "streamline.runners.clean_runner.CleanRunner.run"]], "streamline.runners.clean_runner": [[36, "module-streamline.runners.clean_runner"]], "comparerunner (class in streamline.runners.compare_runner)": [[37, "streamline.runners.compare_runner.CompareRunner"]], "get_cluster_params() (streamline.runners.compare_runner.comparerunner method)": [[37, "streamline.runners.compare_runner.CompareRunner.get_cluster_params"]], "run() (streamline.runners.compare_runner.comparerunner method)": [[37, "streamline.runners.compare_runner.CompareRunner.run"]], "streamline.runners.compare_runner": [[37, "module-streamline.runners.compare_runner"]], "submit_lsf_cluster_job() (streamline.runners.compare_runner.comparerunner method)": [[37, "streamline.runners.compare_runner.CompareRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.compare_runner.comparerunner method)": [[37, "streamline.runners.compare_runner.CompareRunner.submit_slurm_cluster_job"]], "dataprocessrunner (class in streamline.runners.dataprocess_runner)": [[38, "streamline.runners.dataprocess_runner.DataProcessRunner"]], "get_cluster_params() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[38, "streamline.runners.dataprocess_runner.DataProcessRunner.get_cluster_params"]], "run() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[38, "streamline.runners.dataprocess_runner.DataProcessRunner.run"]], "save_metadata() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[38, "streamline.runners.dataprocess_runner.DataProcessRunner.save_metadata"]], "streamline.runners.dataprocess_runner": [[38, "module-streamline.runners.dataprocess_runner"]], "submit_lsf_cluster_job() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[38, "streamline.runners.dataprocess_runner.DataProcessRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.dataprocess_runner.dataprocessrunner method)": [[38, "streamline.runners.dataprocess_runner.DataProcessRunner.submit_slurm_cluster_job"]], "edarunner (class in streamline.runners.eda_runner)": [[39, "streamline.runners.eda_runner.EDARunner"]], "get_cluster_params() (streamline.runners.eda_runner.edarunner method)": [[39, "streamline.runners.eda_runner.EDARunner.get_cluster_params"]], "make_dir_tree() (streamline.runners.eda_runner.edarunner method)": [[39, "streamline.runners.eda_runner.EDARunner.make_dir_tree"]], "run() (streamline.runners.eda_runner.edarunner method)": [[39, "streamline.runners.eda_runner.EDARunner.run"]], "run_kfold() (streamline.runners.eda_runner.edarunner method)": [[39, "streamline.runners.eda_runner.EDARunner.run_kfold"]], "save_metadata() (streamline.runners.eda_runner.edarunner method)": [[39, "streamline.runners.eda_runner.EDARunner.save_metadata"]], "streamline.runners.eda_runner": [[39, "module-streamline.runners.eda_runner"]], "submit_lsf_cluster_job() (streamline.runners.eda_runner.edarunner method)": [[39, "streamline.runners.eda_runner.EDARunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.eda_runner.edarunner method)": [[39, "streamline.runners.eda_runner.EDARunner.submit_slurm_cluster_job"]], "featureimportancerunner (class in streamline.runners.feature_runner)": [[40, "streamline.runners.feature_runner.FeatureImportanceRunner"]], "featureselectionrunner (class in streamline.runners.feature_runner)": [[40, "streamline.runners.feature_runner.FeatureSelectionRunner"]], "get_cluster_params() (streamline.runners.feature_runner.featureimportancerunner method)": [[40, "streamline.runners.feature_runner.FeatureImportanceRunner.get_cluster_params"]], "get_cluster_params() (streamline.runners.feature_runner.featureselectionrunner method)": [[40, "streamline.runners.feature_runner.FeatureSelectionRunner.get_cluster_params"]], "run() (streamline.runners.feature_runner.featureimportancerunner method)": [[40, "streamline.runners.feature_runner.FeatureImportanceRunner.run"]], "run() (streamline.runners.feature_runner.featureselectionrunner method)": [[40, "streamline.runners.feature_runner.FeatureSelectionRunner.run"]], "save_metadata() (streamline.runners.feature_runner.featureimportancerunner method)": [[40, "streamline.runners.feature_runner.FeatureImportanceRunner.save_metadata"]], "save_metadata() (streamline.runners.feature_runner.featureselectionrunner method)": [[40, "streamline.runners.feature_runner.FeatureSelectionRunner.save_metadata"]], "streamline.runners.feature_runner": [[40, "module-streamline.runners.feature_runner"]], "submit_lsf_cluster_job() (streamline.runners.feature_runner.featureimportancerunner method)": [[40, "streamline.runners.feature_runner.FeatureImportanceRunner.submit_lsf_cluster_job"]], "submit_lsf_cluster_job() (streamline.runners.feature_runner.featureselectionrunner method)": [[40, "streamline.runners.feature_runner.FeatureSelectionRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.feature_runner.featureimportancerunner method)": [[40, "streamline.runners.feature_runner.FeatureImportanceRunner.submit_slurm_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.feature_runner.featureselectionrunner method)": [[40, "streamline.runners.feature_runner.FeatureSelectionRunner.submit_slurm_cluster_job"]], "modelexperimentrunner (class in streamline.runners.model_runner)": [[41, "streamline.runners.model_runner.ModelExperimentRunner"]], "get_cluster_params() (streamline.runners.model_runner.modelexperimentrunner method)": [[41, "streamline.runners.model_runner.ModelExperimentRunner.get_cluster_params"]], "run() (streamline.runners.model_runner.modelexperimentrunner method)": [[41, "streamline.runners.model_runner.ModelExperimentRunner.run"]], "save_alginfo() (streamline.runners.model_runner.modelexperimentrunner method)": [[41, "streamline.runners.model_runner.ModelExperimentRunner.save_alginfo"]], "save_metadata() (streamline.runners.model_runner.modelexperimentrunner method)": [[41, "streamline.runners.model_runner.ModelExperimentRunner.save_metadata"]], "streamline.runners.model_runner": [[41, "module-streamline.runners.model_runner"]], "submit_lsf_cluster_job() (streamline.runners.model_runner.modelexperimentrunner method)": [[41, "streamline.runners.model_runner.ModelExperimentRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.model_runner.modelexperimentrunner method)": [[41, "streamline.runners.model_runner.ModelExperimentRunner.submit_slurm_cluster_job"]], "replicationrunner (class in streamline.runners.replicate_runner)": [[42, "streamline.runners.replicate_runner.ReplicationRunner"]], "get_algorithms() (streamline.runners.replicate_runner.replicationrunner method)": [[42, "streamline.runners.replicate_runner.ReplicationRunner.get_algorithms"]], "get_cluster_params() (streamline.runners.replicate_runner.replicationrunner method)": [[42, "streamline.runners.replicate_runner.ReplicationRunner.get_cluster_params"]], "run() (streamline.runners.replicate_runner.replicationrunner method)": [[42, "streamline.runners.replicate_runner.ReplicationRunner.run"]], "save_metadata() (streamline.runners.replicate_runner.replicationrunner method)": [[42, "streamline.runners.replicate_runner.ReplicationRunner.save_metadata"]], "streamline.runners.replicate_runner": [[42, "module-streamline.runners.replicate_runner"]], "submit_lsf_cluster_job() (streamline.runners.replicate_runner.replicationrunner method)": [[42, "streamline.runners.replicate_runner.ReplicationRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.replicate_runner.replicationrunner method)": [[42, "streamline.runners.replicate_runner.ReplicationRunner.submit_slurm_cluster_job"]], "reportrunner (class in streamline.runners.report_runner)": [[43, "streamline.runners.report_runner.ReportRunner"]], "get_cluster_params() (streamline.runners.report_runner.reportrunner method)": [[43, "streamline.runners.report_runner.ReportRunner.get_cluster_params"]], "run() (streamline.runners.report_runner.reportrunner method)": [[43, "streamline.runners.report_runner.ReportRunner.run"]], "streamline.runners.report_runner": [[43, "module-streamline.runners.report_runner"]], "submit_lsf_cluster_job() (streamline.runners.report_runner.reportrunner method)": [[43, "streamline.runners.report_runner.ReportRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.report_runner.reportrunner method)": [[43, "streamline.runners.report_runner.ReportRunner.submit_slurm_cluster_job"]], "statsrunner (class in streamline.runners.stats_runner)": [[44, "streamline.runners.stats_runner.StatsRunner"]], "get_cluster_params() (streamline.runners.stats_runner.statsrunner method)": [[44, "streamline.runners.stats_runner.StatsRunner.get_cluster_params"]], "run() (streamline.runners.stats_runner.statsrunner method)": [[44, "streamline.runners.stats_runner.StatsRunner.run"]], "save_metadata() (streamline.runners.stats_runner.statsrunner method)": [[44, "streamline.runners.stats_runner.StatsRunner.save_metadata"]], "streamline.runners.stats_runner": [[44, "module-streamline.runners.stats_runner"]], "submit_lsf_cluster_job() (streamline.runners.stats_runner.statsrunner method)": [[44, "streamline.runners.stats_runner.StatsRunner.submit_lsf_cluster_job"]], "submit_slurm_cluster_job() (streamline.runners.stats_runner.statsrunner method)": [[44, "streamline.runners.stats_runner.StatsRunner.submit_slurm_cluster_job"]], "streamline.utils": [[45, "module-streamline.utils"]], "check_phase() (in module streamline.utils.checker)": [[46, "streamline.utils.checker.check_phase"]], "check_phase_1() (in module streamline.utils.checker)": [[46, "streamline.utils.checker.check_phase_1"]], "check_phase_10() (in module streamline.utils.checker)": [[46, "streamline.utils.checker.check_phase_10"]], "check_phase_2() (in module streamline.utils.checker)": [[46, "streamline.utils.checker.check_phase_2"]], "check_phase_3() (in module streamline.utils.checker)": [[46, "streamline.utils.checker.check_phase_3"]], "check_phase_4() (in module streamline.utils.checker)": [[46, "streamline.utils.checker.check_phase_4"]], "check_phase_5() (in module streamline.utils.checker)": [[46, "streamline.utils.checker.check_phase_5"]], "check_phase_6() (in module streamline.utils.checker)": [[46, "streamline.utils.checker.check_phase_6"]], "check_phase_7() (in module streamline.utils.checker)": [[46, "streamline.utils.checker.check_phase_7"]], "check_phase_8() (in module streamline.utils.checker)": [[46, "streamline.utils.checker.check_phase_8"]], "check_phase_9() (in module streamline.utils.checker)": [[46, "streamline.utils.checker.check_phase_9"]], "streamline.utils.checker": [[46, "module-streamline.utils.checker"]], "cleaner (class in streamline.utils.cleanup)": [[47, "streamline.utils.cleanup.Cleaner"]], "rm_tree() (streamline.utils.cleanup.cleaner static method)": [[47, "streamline.utils.cleanup.Cleaner.rm_tree"]], "run() (streamline.utils.cleanup.cleaner method)": [[47, "streamline.utils.cleanup.Cleaner.run"]], "streamline.utils.cleanup": [[47, "module-streamline.utils.cleanup"]], "get_cluster() (in module streamline.utils.cluster)": [[48, "streamline.utils.cluster.get_cluster"]], "streamline.utils.cluster": [[48, "module-streamline.utils.cluster"]], "dataset (class in streamline.utils.dataset)": [[49, "streamline.utils.dataset.Dataset"]], "clean_data() (streamline.utils.dataset.dataset method)": [[49, "streamline.utils.dataset.Dataset.clean_data"]], "feature_only_data() (streamline.utils.dataset.dataset method)": [[49, "streamline.utils.dataset.Dataset.feature_only_data"]], "get_outcome() (streamline.utils.dataset.dataset method)": [[49, "streamline.utils.dataset.Dataset.get_outcome"]], "load_data() (streamline.utils.dataset.dataset method)": [[49, "streamline.utils.dataset.Dataset.load_data"]], "non_feature_data() (streamline.utils.dataset.dataset method)": [[49, "streamline.utils.dataset.Dataset.non_feature_data"]], "set_headers() (streamline.utils.dataset.dataset method)": [[49, "streamline.utils.dataset.Dataset.set_headers"]], "streamline.utils.dataset": [[49, "module-streamline.utils.dataset"]], "class_eval() (in module streamline.utils.evaluation)": [[50, "streamline.utils.evaluation.class_eval"]], "streamline.utils.evaluation": [[50, "module-streamline.utils.evaluation"]], "job (class in streamline.utils.job)": [[51, "streamline.utils.job.Job"]], "run() (streamline.utils.job.job method)": [[51, "streamline.utils.job.Job.run"]], "run_cluster() (streamline.utils.job.job method)": [[51, "streamline.utils.job.Job.run_cluster"]], "streamline.utils.job": [[51, "module-streamline.utils.job"]], "parser_function() (in module streamline.utils.parser)": [[52, "streamline.utils.parser.parser_function"]], "process_params() (in module streamline.utils.parser)": [[52, "streamline.utils.parser.process_params"]], "single_parse() (in module streamline.utils.parser)": [[52, "streamline.utils.parser.single_parse"]], "streamline.utils.parser": [[52, "module-streamline.utils.parser"]], "model_runner_fn() (in module streamline.utils.runners)": [[53, "streamline.utils.runners.model_runner_fn"]], "parallel_eda_call() (in module streamline.utils.runners)": [[53, "streamline.utils.runners.parallel_eda_call"]], "parallel_kfold_call() (in module streamline.utils.runners)": [[53, "streamline.utils.runners.parallel_kfold_call"]], "run_jobs() (in module streamline.utils.runners)": [[53, "streamline.utils.runners.run_jobs"]], "runner_fn() (in module streamline.utils.runners)": [[53, "streamline.utils.runners.runner_fn"]], "streamline.utils.runners": [[53, "module-streamline.utils.runners"]], "sub_jobs() (in module streamline.utils.runners)": [[53, "streamline.utils.runners.sub_jobs"]]}})